{"version":3,"sources":["../node_modules/markdown-it/lib/common/utils.js","../node_modules/@babel/runtime/helpers/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/react-i18next/dist/es/withTranslation.js","../node_modules/@mui/material/Grid/GridContext.js","../node_modules/@mui/material/Grid/gridClasses.js","../node_modules/@mui/material/Grid/Grid.js","../node_modules/uc.micro/categories/P/regex.js","../node_modules/markdown-it/lib/ruler.js","../node_modules/markdown-it/lib/token.js","../node_modules/node-libs-browser/node_modules/punycode/punycode.js","../node_modules/markdown-it/index.js","../node_modules/markdown-it/lib/common/entities.js","../node_modules/mdurl/index.js","../node_modules/uc.micro/properties/Any/regex.js","../node_modules/uc.micro/categories/Cc/regex.js","../node_modules/uc.micro/categories/Z/regex.js","../node_modules/markdown-it/lib/common/html_re.js","../node_modules/markdown-it/lib/rules_inline/strikethrough.js","../node_modules/markdown-it/lib/rules_inline/emphasis.js","../node_modules/markdown-it/lib/index.js","../node_modules/mdurl/encode.js","../node_modules/mdurl/decode.js","../node_modules/mdurl/format.js","../node_modules/mdurl/parse.js","../node_modules/uc.micro/index.js","../node_modules/uc.micro/categories/Cf/regex.js","../node_modules/markdown-it/lib/helpers/index.js","../node_modules/markdown-it/lib/helpers/parse_link_label.js","../node_modules/markdown-it/lib/helpers/parse_link_destination.js","../node_modules/markdown-it/lib/helpers/parse_link_title.js","../node_modules/markdown-it/lib/renderer.js","../node_modules/markdown-it/lib/parser_core.js","../node_modules/markdown-it/lib/rules_core/normalize.js","../node_modules/markdown-it/lib/rules_core/block.js","../node_modules/markdown-it/lib/rules_core/inline.js","../node_modules/markdown-it/lib/rules_core/linkify.js","../node_modules/markdown-it/lib/rules_core/replacements.js","../node_modules/markdown-it/lib/rules_core/smartquotes.js","../node_modules/markdown-it/lib/rules_core/state_core.js","../node_modules/markdown-it/lib/parser_block.js","../node_modules/markdown-it/lib/rules_block/table.js","../node_modules/markdown-it/lib/rules_block/code.js","../node_modules/markdown-it/lib/rules_block/fence.js","../node_modules/markdown-it/lib/rules_block/blockquote.js","../node_modules/markdown-it/lib/rules_block/hr.js","../node_modules/markdown-it/lib/rules_block/list.js","../node_modules/markdown-it/lib/rules_block/reference.js","../node_modules/markdown-it/lib/rules_block/html_block.js","../node_modules/markdown-it/lib/common/html_blocks.js","../node_modules/markdown-it/lib/rules_block/heading.js","../node_modules/markdown-it/lib/rules_block/lheading.js","../node_modules/markdown-it/lib/rules_block/paragraph.js","../node_modules/markdown-it/lib/rules_block/state_block.js","../node_modules/markdown-it/lib/parser_inline.js","../node_modules/markdown-it/lib/rules_inline/text.js","../node_modules/markdown-it/lib/rules_inline/newline.js","../node_modules/markdown-it/lib/rules_inline/escape.js","../node_modules/markdown-it/lib/rules_inline/backticks.js","../node_modules/markdown-it/lib/rules_inline/link.js","../node_modules/markdown-it/lib/rules_inline/image.js","../node_modules/markdown-it/lib/rules_inline/autolink.js","../node_modules/markdown-it/lib/rules_inline/html_inline.js","../node_modules/markdown-it/lib/rules_inline/entity.js","../node_modules/markdown-it/lib/rules_inline/balance_pairs.js","../node_modules/markdown-it/lib/rules_inline/text_collapse.js","../node_modules/markdown-it/lib/rules_inline/state_inline.js","../node_modules/linkify-it/index.js","../node_modules/linkify-it/lib/re.js","../node_modules/markdown-it/lib/presets/default.js","../node_modules/markdown-it/lib/presets/zero.js","../node_modules/markdown-it/lib/presets/commonmark.js"],"names":["_hasOwnProperty","Object","prototype","hasOwnProperty","has","object","key","call","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","String","fromCharCode","UNESCAPE_MD_RE","UNESCAPE_ALL_RE","RegExp","source","DIGITAL_ENTITY_TEST_RE","entities","require","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","ch","REGEXP_ESCAPE_RE","UNICODE_PUNCT_RE","exports","lib","mdurl","ucmicro","assign","obj","sources","Array","slice","arguments","forEach","TypeError","keys","isString","toString","_class","unescapeMd","str","indexOf","replace","unescapeAll","match","escaped","entity","name","code","charCodeAt","test","toLowerCase","parseInt","replaceEntityPattern","escapeHtml","arrayReplaceAt","src","pos","newElements","concat","isSpace","isWhiteSpace","isMdAsciiPunct","isPunctChar","escapeRE","normalizeReference","trim","toUpperCase","objectWithoutPropertiesLoose","module","excluded","i","target","getOwnPropertySymbols","sourceSymbolKeys","length","propertyIsEnumerable","__esModule","sourceKeys","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","cardClasses","_excluded","CardRoot","styled","Paper","overridesResolver","props","styles","root","overflow","Card","React","inProps","ref","useThemeProps","className","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","clsx","elevation","undefined","ownKeys","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","withTranslation","ns","options","WrappedComponent","I18nextWithTranslation","_ref","forwardedRef","rest","_objectWithoutProperties","_useTranslation","useTranslation","_useTranslation2","_slicedToArray","t","i18n","ready","passDownProps","tReady","withRef","createElement","displayName","getDisplayName","forwardRef","GridContext","getGridUtilityClass","GRID_SIZES","gridClasses","map","spacing","direction","wrap","size","getOffset","val","parse","parseFloat","resolveSpacingClasses","container","Number","isNaN","xs","sm","md","lg","xl","GridRoot","item","zeroMinWidth","_ref5","boxSizing","display","flexWrap","width","margin","minWidth","_ref2","theme","directionValues","resolveBreakpointValues","values","breakpoints","handleBreakpoints","propValue","output","flexDirection","maxWidth","_ref3","rowSpacing","rowSpacingValues","themeSpacing","marginTop","paddingTop","_ref4","columnSpacing","columnSpacingValues","marginLeft","paddingLeft","reduce","globalStyles","breakpoint","flexBasis","flexGrow","flexShrink","columnsBreakpointValues","columns","columnValue","Math","round","more","fullWidth","up","Grid","themeProps","extendSxProp","columnsProp","columnSpacingProp","component","rowSpacingProp","columnsContext","slots","Provider","value","children","as","Ruler","this","__rules__","__cache__","__find__","__compile__","self","chains","rule","enabled","alt","altName","chain","fn","at","index","opt","Error","before","beforeName","ruleName","splice","after","afterName","enable","list","ignoreInvalid","isArray","result","idx","enableOnly","disable","getRules","chainName","Token","type","tag","nesting","attrs","level","content","markup","info","meta","block","hidden","attrIndex","len","attrPush","attrData","attrSet","attrGet","attrJoin","nodeType","freeGlobal","global","window","punycode","maxInt","base","regexPunycode","regexNonASCII","regexSeparators","errors","floor","stringFromCharCode","error","RangeError","array","mapDomain","string","parts","split","join","ucs2decode","extra","counter","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","k","baseMinusTMin","decode","input","out","basic","j","oldi","w","baseMinusT","codePoint","inputLength","n","bias","lastIndexOf","encode","handledCPCount","basicLength","m","q","currentValue","handledCPCountPlusOne","qMinusT","define","format","open_tag","close_tag","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","postProcess","state","delimiters","startDelim","endDelim","token","loneMarkers","max","marker","end","tokens","pop","tokenize","silent","scanned","start","scanDelims","open","can_open","close","can_close","curr","tokens_meta","isStrong","utils","helpers","Renderer","ParserCore","ParserBlock","ParserInline","LinkifyIt","config","default","zero","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","validateLink","url","RECODE_HOSTNAME_FOR","normalizeLink","parsed","hostname","protocol","toASCII","er","normalizeLinkText","toUnicode","defaultChars","MarkdownIt","presetName","inline","core","renderer","linkify","configure","set","presets","components","rules","ruler","rules2","ruler2","missed","use","plugin","args","env","State","process","render","parseInline","inlineMode","renderInline","encodeCache","exclude","keepEscaped","l","nextCode","cache","getEncodeCache","encodeURIComponent","componentChars","decodeCache","getDecodeCache","seq","b1","b2","b3","b4","chr","slashes","auth","port","pathname","search","hash","Url","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","hostlessProtocol","slashedProtocol","slashesDenoteHost","lowerProto","hec","simplePath","exec","proto","substr","atSign","hostEnd","host","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","unshift","qm","u","Any","Cc","Cf","P","Z","parseLinkLabel","parseLinkDestination","parseLinkTitle","disableNested","found","prevPos","labelEnd","posMax","oldPos","skipToken","ok","lines","default_rules","code_inline","slf","renderAttrs","code_block","fence","highlighted","arr","tmpAttrs","tmpToken","langName","langAttrs","highlight","langPrefix","image","renderInlineAsText","renderToken","hardbreak","xhtmlOut","softbreak","breaks","text","html_block","html_inline","nextToken","needLf","_rules","Core","NEWLINES_RE","NULL_RE","tok","isLinkClose","currentToken","nodes","ln","lastPos","htmlLinkLevel","fullUrl","urlText","links","blockTokens","pretest","schema","lastIndex","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","r","p","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","blkIdx","typographer","QUOTE_TEST_RE","QUOTE_RE","replaceAt","process_inlines","thisLevel","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","canOpen","canClose","isSingle","stack","openQuote","closeQuote","OUTER","single","quotes","StateCore","startLine","endLine","line","hasEmptyLines","maxNesting","skipEmptyLines","sCount","blkIndent","tight","isEmpty","outTokens","lineMax","getLine","bMarks","tShift","eMarks","escapedSplit","isEscaped","current","substring","lineText","nextLine","columnCount","aligns","tableLines","tbodyLines","oldParentType","terminate","terminatorRules","firstCh","secondCh","shift","parentType","last","getLines","params","mem","haveEndMarker","skipChars","skipSpaces","adjustTab","initial","lastLineEmpty","offset","oldBMarks","oldBSCount","oldIndent","oldSCount","oldTShift","spaceAfterMarker","isOutdented","oldLineMax","bsCount","cnt","skipBulletListMarker","skipOrderedListMarker","contentStart","indent","indentAfterMarker","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldListIndent","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","listIndent","min","markTightParagraphs","_endLine","destEndPos","destEndLineNo","href","label","res","title","references","block_names","HTML_SEQUENCES","html","tmp","skipSpacesBack","skipCharsBack","StateBlock","s","indent_found","ddIndent","from","begin","keepLastLF","lineIndent","first","queue","lineStart","_rules2","pending","pushPending","isTerminatorChar","pmax","ws","ESCAPED","matchStart","matchEnd","openerLength","closerLength","backticksScanned","backticks","labelStart","parseReference","EMAIL_RE","AUTOLINK_RE","lc","isLetter","DIGITAL_RE","NAMED_RE","processDelimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","headerIdx","lastTokenIdx","jumps","StateInline","pendingLevel","_prev_delimiters","token_meta","canSplitWord","count","left_flanking","right_flanking","isFunction","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","defaultSchemas","validate","tail","re","http","src_auth","src_host_port_strict","src_path","no_http","src_domain","src_domain_root","src_port","src_host_terminator","mailto","src_email_name","src_host_strict","tlds_default","compile","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","src_xn","email_fuzzy","tpl_email_fuzzy","link_fuzzy","tpl_link_fuzzy","link_no_ip_fuzzy","tpl_link_no_ip_fuzzy","host_fuzzy_test","tpl_host_fuzzy_test","aliases","schemaError","__compiled__","__schemas__","compiled","link","isRegExp","createValidator","normalize","alias","slist","schema_test","src_ZPCc","schema_search","__index__","__text_cache__","resetScanCache","Match","__last_index__","__schema__","raw","createMatch","schemas","acc","add","definition","ml","me","next","tld_pos","testSchemaAt","keepOld","sort","el","reverse","opts","src_Any","src_Cc","src_Z","src_P","src_ZCc","src_pseudo_letter","src_ip4","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","tpl_host_fuzzy_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict"],"mappings":"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","file":"static/js/2.818a5655.chunk.js","sourcesContent":["// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose.js\");\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutProperties, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\n\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n\n  const {\n    className,\n    raised = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    raised\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"forwardedRef\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { useTranslation } from './useTranslation';\nimport { getDisplayName } from './utils';\nexport function withTranslation(ns) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return function Extend(WrappedComponent) {\n    function I18nextWithTranslation(_ref) {\n      var forwardedRef = _ref.forwardedRef,\n          rest = _objectWithoutProperties(_ref, _excluded);\n\n      var _useTranslation = useTranslation(ns, rest),\n          _useTranslation2 = _slicedToArray(_useTranslation, 3),\n          t = _useTranslation2[0],\n          i18n = _useTranslation2[1],\n          ready = _useTranslation2[2];\n\n      var passDownProps = _objectSpread(_objectSpread({}, rest), {}, {\n        t: t,\n        i18n: i18n,\n        tReady: ready\n      });\n\n      if (options.withRef && forwardedRef) {\n        passDownProps.ref = forwardedRef;\n      } else if (!options.withRef && forwardedRef) {\n        passDownProps.forwardedRef = forwardedRef;\n      }\n\n      return React.createElement(WrappedComponent, passDownProps);\n    }\n\n    I18nextWithTranslation.displayName = \"withI18nextTranslation(\".concat(getDisplayName(WrappedComponent), \")\");\n    I18nextWithTranslation.WrappedComponent = WrappedComponent;\n\n    var forwardRef = function forwardRef(props, ref) {\n      return React.createElement(I18nextWithTranslation, Object.assign({}, props, {\n        forwardedRef: ref\n      }));\n    };\n\n    return options.withRef ? React.forwardRef(forwardRef) : I18nextWithTranslation;\n  };\n}","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst GridContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  GridContext.displayName = 'GridContext';\n}\n\nexport default GridContext;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getGridUtilityClass(slot) {\n  return generateUtilityClass('MuiGrid', slot);\n}\nconst SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst DIRECTIONS = ['column-reverse', 'column', 'row-reverse', 'row'];\nconst WRAPS = ['nowrap', 'wrap-reverse', 'wrap'];\nconst GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nconst gridClasses = generateUtilityClasses('MuiGrid', ['root', 'container', 'item', 'zeroMinWidth', // spacings\n...SPACINGS.map(spacing => `spacing-xs-${spacing}`), // direction values\n...DIRECTIONS.map(direction => `direction-xs-${direction}`), // wrap values\n...WRAPS.map(wrap => `wrap-xs-${wrap}`), // grid sizes for all breakpoints\n...GRID_SIZES.map(size => `grid-xs-${size}`), ...GRID_SIZES.map(size => `grid-sm-${size}`), ...GRID_SIZES.map(size => `grid-md-${size}`), ...GRID_SIZES.map(size => `grid-lg-${size}`), ...GRID_SIZES.map(size => `grid-xl-${size}`)]);\nexport default gridClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"columns\", \"columnSpacing\", \"component\", \"container\", \"direction\", \"item\", \"lg\", \"md\", \"rowSpacing\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"];\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp, handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport GridContext from './GridContext';\nimport gridClasses, { getGridUtilityClass } from './gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction getOffset(val) {\n  const parse = parseFloat(val);\n  return `${parse}${String(val).replace(String(parse), '') || 'px'}`;\n}\n\nexport function generateGrid({\n  theme,\n  ownerState\n}) {\n  let size;\n  return theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\n    // Use side effect over immutability for better performance.\n    let styles = {};\n\n    if (ownerState[breakpoint]) {\n      size = ownerState[breakpoint];\n    }\n\n    if (!size) {\n      return globalStyles;\n    }\n\n    if (size === true) {\n      // For the auto layouting\n      styles = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n    } else if (size === 'auto') {\n      styles = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        flexShrink: 0,\n        maxWidth: 'none',\n        width: 'auto'\n      };\n    } else {\n      const columnsBreakpointValues = resolveBreakpointValues({\n        values: ownerState.columns,\n        breakpoints: theme.breakpoints.values\n      });\n      const columnValue = typeof columnsBreakpointValues === 'object' ? columnsBreakpointValues[breakpoint] : columnsBreakpointValues;\n\n      if (columnValue === undefined || columnValue === null) {\n        return globalStyles;\n      } // Keep 7 significant numbers.\n\n\n      const width = `${Math.round(size / columnValue * 10e7) / 10e5}%`;\n      let more = {};\n\n      if (ownerState.container && ownerState.item && ownerState.columnSpacing !== 0) {\n        const themeSpacing = theme.spacing(ownerState.columnSpacing);\n\n        if (themeSpacing !== '0px') {\n          const fullWidth = `calc(${width} + ${getOffset(themeSpacing)})`;\n          more = {\n            flexBasis: fullWidth,\n            maxWidth: fullWidth\n          };\n        }\n      } // Close to the bootstrap implementation:\n      // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n\n      styles = _extends({\n        flexBasis: width,\n        flexGrow: 0,\n        maxWidth: width\n      }, more);\n    } // No need for a media query for the first size.\n\n\n    if (theme.breakpoints.values[breakpoint] === 0) {\n      Object.assign(globalStyles, styles);\n    } else {\n      globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n    }\n\n    return globalStyles;\n  }, {});\n}\nexport function generateDirection({\n  theme,\n  ownerState\n}) {\n  const directionValues = resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  });\n  return handleBreakpoints({\n    theme\n  }, directionValues, propValue => {\n    const output = {\n      flexDirection: propValue\n    };\n\n    if (propValue.indexOf('column') === 0) {\n      output[`& > .${gridClasses.item}`] = {\n        maxWidth: 'none'\n      };\n    }\n\n    return output;\n  });\n}\nexport function generateRowGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    rowSpacing\n  } = ownerState;\n  let styles = {};\n\n  if (container && rowSpacing !== 0) {\n    const rowSpacingValues = resolveBreakpointValues({\n      values: rowSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    styles = handleBreakpoints({\n      theme\n    }, rowSpacingValues, propValue => {\n      const themeSpacing = theme.spacing(propValue);\n\n      if (themeSpacing !== '0px') {\n        return {\n          marginTop: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingTop: getOffset(themeSpacing)\n          }\n        };\n      }\n\n      return {};\n    });\n  }\n\n  return styles;\n}\nexport function generateColumnGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    columnSpacing\n  } = ownerState;\n  let styles = {};\n\n  if (container && columnSpacing !== 0) {\n    const columnSpacingValues = resolveBreakpointValues({\n      values: columnSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    styles = handleBreakpoints({\n      theme\n    }, columnSpacingValues, propValue => {\n      const themeSpacing = theme.spacing(propValue);\n\n      if (themeSpacing !== '0px') {\n        return {\n          width: `calc(100% + ${getOffset(themeSpacing)})`,\n          marginLeft: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingLeft: getOffset(themeSpacing)\n          }\n        };\n      }\n\n      return {};\n    });\n  }\n\n  return styles;\n}\nexport function resolveSpacingClasses(spacing, container, styles = {}) {\n  // in case of grid item or undefined/null or `spacing` <= 0\n  if (!container || !spacing || spacing <= 0) {\n    return [];\n  } // in case of string/number `spacing`\n\n\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [styles[`spacing-xs-${String(spacing)}`] || `spacing-xs-${String(spacing)}`];\n  } // in case of object `spacing`\n\n\n  const {\n    xs,\n    sm,\n    md,\n    lg,\n    xl\n  } = spacing;\n  return [Number(xs) > 0 && (styles[`spacing-xs-${String(xs)}`] || `spacing-xs-${String(xs)}`), Number(sm) > 0 && (styles[`spacing-sm-${String(sm)}`] || `spacing-sm-${String(sm)}`), Number(md) > 0 && (styles[`spacing-md-${String(md)}`] || `spacing-md-${String(md)}`), Number(lg) > 0 && (styles[`spacing-lg-${String(lg)}`] || `spacing-lg-${String(lg)}`), Number(xl) > 0 && (styles[`spacing-xl-${String(xl)}`] || `spacing-xl-${String(xl)}`)];\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\nconst GridRoot = styled('div', {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      container,\n      direction,\n      item,\n      lg,\n      md,\n      sm,\n      spacing,\n      wrap,\n      xl,\n      xs,\n      zeroMinWidth\n    } = props.ownerState;\n    return [styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, ...resolveSpacingClasses(spacing, container, styles), direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], xs !== false && styles[`grid-xs-${String(xs)}`], sm !== false && styles[`grid-sm-${String(sm)}`], md !== false && styles[`grid-md-${String(md)}`], lg !== false && styles[`grid-lg-${String(lg)}`], xl !== false && styles[`grid-xl-${String(xl)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  boxSizing: 'border-box'\n}, ownerState.container && {\n  display: 'flex',\n  flexWrap: 'wrap',\n  width: '100%'\n}, ownerState.item && {\n  margin: 0 // For instance, it's useful when used with a `figure` element.\n\n}, ownerState.zeroMinWidth && {\n  minWidth: 0\n}, ownerState.wrap !== 'wrap' && {\n  flexWrap: ownerState.wrap\n}), generateDirection, generateRowGap, generateColumnGap, generateGrid);\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    container,\n    direction,\n    item,\n    lg,\n    md,\n    sm,\n    spacing,\n    wrap,\n    xl,\n    xs,\n    zeroMinWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', ...resolveSpacingClasses(spacing, container), direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, xs !== false && `grid-xs-${String(xs)}`, sm !== false && `grid-sm-${String(sm)}`, md !== false && `grid-md-${String(md)}`, lg !== false && `grid-lg-${String(lg)}`, xl !== false && `grid-xl-${String(xl)}`]\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\n\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  const props = extendSxProp(themeProps);\n\n  const {\n    className,\n    columns: columnsProp,\n    columnSpacing: columnSpacingProp,\n    component = 'div',\n    container = false,\n    direction = 'row',\n    item = false,\n    lg = false,\n    md = false,\n    rowSpacing: rowSpacingProp,\n    sm = false,\n    spacing = 0,\n    wrap = 'wrap',\n    xl = false,\n    xs = false,\n    zeroMinWidth = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rowSpacing = rowSpacingProp || spacing;\n  const columnSpacing = columnSpacingProp || spacing;\n  const columnsContext = React.useContext(GridContext); // columns set with default breakpoint unit of 12\n\n  const columns = container ? columnsProp || 12 : columnsContext;\n\n  const ownerState = _extends({}, props, {\n    columns,\n    container,\n    direction,\n    item,\n    lg,\n    md,\n    sm,\n    rowSpacing,\n    columnSpacing,\n    wrap,\n    xl,\n    xs,\n    zeroMinWidth\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridContext.Provider, {\n    value: columns,\n    children: /*#__PURE__*/_jsx(GridRoot, _extends({\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid', Grid); // eslint-disable-next-line no-useless-concat\n\n  Grid['propTypes' + ''] = _extends({}, Grid.propTypes, {\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default Grid;","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3C /* < */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break; }\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 32) { return result; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28 /* ( */ && marker === 0x29 /* ) */) {\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted, i, arr, tmpAttrs, tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    } else if (tokens[i].type === 'softbreak') {\n      result += '\\n';\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        for (ln = 0; ln < links.length; ln++) {\n\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r|p)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  p: '§',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */);\n    pos++;\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines, oldParentType, terminate,\n      terminatorRules, firstCh, secondCh;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  firstCh = state.src.charCodeAt(pos++);\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false; }\n\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  secondCh = state.src.charCodeAt(pos++);\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false;\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) { break; }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token     = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [ startLine + 2, 0 ];\n    }\n\n    token     = state.push('tr_open', 'tr', 1);\n    token.map = [ nextLine, nextLine + 1 ];\n\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n';\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // set offset past spaces and \">\"\n  initial = offset = state.sCount[startLine] + 1;\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      initial = offset = state.sCount[nextLine] + 1;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1);\n    }\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  [ 'text_collapse',   require('./rules_inline/text_collapse') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, ws, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        ws = pmax - 1;\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--;\n\n        state.pending = state.pending.slice(0, ws);\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) { state.pending += state.src[pos]; }\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push('hardbreak', 'br', 0);\n      }\n\n      pos++;\n      // skip leading whitespaces from next line\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += '\\\\'; }\n  state.pos++;\n  return true;\n};\n","// Parse backticks\n\n'use strict';\n\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchStart = matchEnd = pos;\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token     = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart;\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true;\n\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};\n","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.md.inline.tokenize(state);\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var url, fullUrl, token, ch, start, max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23 /* # */) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n      if (match) {\n        if (has(entities, match[1])) {\n          if (!silent) { state.pending += entities[match[1]]; }\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) { state.pending += '&'; }\n  state.pos++;\n  return true;\n};\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  if (!max) return;\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  var headerIdx = 0;\n  var lastTokenIdx = -2; // needs any value lower than -1\n  var jumps = [];\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    jumps.push(0);\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx;\n    }\n\n    lastTokenIdx = closer.token;\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1, -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)];\n\n    openerIdx = headerIdx - jumps[headerIdx] - 1;\n\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            jumps[openerIdx - 1] + 1 :\n            0;\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump;\n          jumps[openerIdx] = lastJump;\n\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function text_collapse(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n\n  // backtick length => last seen position\n  this.backticks = {};\n  this.backticksScanned = false;\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')(?!-|_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-]).|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n                                     // github has ... in commit range links,\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // - params separator\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]).|' +\n          (opts && opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          ',(?!' + re.src_ZCc + ').|' +       // allow `,,,` in paths\n          ';(?!' + re.src_ZCc + ').|' +       // allow `;` if not followed by space-like char\n          '\\\\!+(?!' + re.src_ZCc + '|[!]).|' +  // allow `!!!` in paths, but not at the end\n          '\\\\?(?!' + re.src_ZCc + '|[?]).' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'text_collapse'\n      ]\n    }\n  }\n};\n"],"sourceRoot":""}