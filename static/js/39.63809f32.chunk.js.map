{"version":3,"sources":["router/beforeRouter.ts","../node_modules/@mui/material/DialogContentText/dialogContentTextClasses.js","../node_modules/@mui/material/DialogContentText/DialogContentText.js","modules/walletLogin/page/Profile/index.tsx"],"names":["useRouterBeforeEach","navigate","useNavigate","location","useLocation","auth","setAuth","useState","useEffect","Cookies","get","pathname","indexOf","getDialogContentTextUtilityClass","slot","generateUtilityClass","generateUtilityClasses","dialogContentTextClasses","_excluded","DialogContentTextRoot","styled","Typography","shouldForwardProp","prop","rootShouldForwardProp","name","overridesResolver","props","styles","root","DialogContentText","React","inProps","ref","useThemeProps","ownerState","_objectWithoutPropertiesLoose","classes","composedClasses","composeClasses","_extends","useUtilityClasses","_jsx","component","variant","color","selector","currentSelector","types","storeLogin","createSelector","current","withStyles","theme","createStyles","from","width","margin","padding","background","palette","mode","labelName","textAlign","formLabel","display","labelItem","uploadBtn","height","border","alignItems","justifyContent","cursor","okBtn","marginRight","footer","useTheme","state","useSelector","useRef","disabledBtn","setDisabledBtn","dispatch","useDispatch","t","useTranslation","useDisabled","setUseDisabled","openDialog","setOpenDialog","alert","setAlert","open","severity","message","form","userName","changeFrom","type","e","target","value","formData","handleClose","userInfo","wallet_addr","Card","className","InputLabel","error","Input","sx","textFillColor","onChange","disabled","defaultValue","inputRef","Button","onClick","async","setTimeout","focus","code","getQrCode","address","opt","sign","getSign","data","updateUserName","new","old","status","window","reload","console","e_mail","placeholder","avatar","twitter_name","discord_name","telegram_name","TextareaAutosize","minRows","profile","UPDATE_USERINFO","payload","callback","res","Dialog","backgroundColor","default","getContrastText","paper","onClose","DialogTitle","id","DialogContent","style","DialogActions","DELETE_USERINFO","autoFocus","Loading","Snackbar","autoHideDuration","Alert"],"mappings":"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","file":"static/js/39.63809f32.chunk.js","sourcesContent":["import {useNavigate,useLocation,useResolvedPath } from \"react-router-dom\";\nimport { Outlet } from 'react-router-dom'\nimport {useEffect,useState} from 'react'\nimport Cookies from 'js-cookie'\n\nconst useRouterBeforeEach = ()=>{\n  const navigate = useNavigate()\n  const location = useLocation()\n  const [auth,setAuth] = useState(false)\n  useEffect(()=>{\n    if(!Cookies.get('wallet_status') && location.pathname.indexOf('/user') !== -1){\n      navigate('/error')\n    }\n  },[])\n} \n \nexport default useRouterBeforeEach","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDialogContentTextUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContentText', slot);\n}\nconst dialogContentTextClasses = generateUtilityClasses('MuiDialogContentText', ['root']);\nexport default dialogContentTextClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport { getDialogContentTextUtilityClass } from './dialogContentTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst DialogContentTextRoot = styled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiDialogContentText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n\n  const ownerState = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"text.secondary\",\n    ref: ref,\n    ownerState: ownerState\n  }, props, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContentText;","import React, { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, createStyles, useTheme } from '@mui/styles';\nimport { Input, InputLabel, Button, Snackbar, Alert, Theme, Card, TextareaAutosize, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@mui/material';\nimport { useTranslation } from 'react-i18next';\n// import classNames from 'classnames';\nimport { createSelector } from 'reselect';\n// import { formatBalance, shortenAddress } from '@/utils/helper';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Loading from '@/common/Loading';\nimport storeLogin from '@/walletLogin/store';\nimport useRouterBeforeEach from '../../../../router/beforeRouter';\nimport { UserInfo } from '@/walletLogin/type';\nimport { getQrCode, updateUserName } from '@/walletLogin/store/apis';\nimport { getSign } from '../../../../wallet/starMask';\n\nconst useStyles = (theme: Theme) => createStyles({\n    from: {\n        width: '800px',\n        margin: '100px auto',\n        padding: '50px',\n        background: theme.palette.mode === 'dark' ? '#424242' : \"rgb(237, 238, 242)\",\n    },\n    labelName: {\n        width: '33%',\n        textAlign: 'right',\n\n    },\n    formLabel: {\n        // color: '#fff',\n        margin: '20px',\n        width: '100%',\n        display: 'flex',\n    },\n    labelItem: {\n        width: '66%',\n    },\n    uploadBtn: {\n        width: '100px',\n        height: '100px',\n        border: '1px solid #fff',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        cursor: 'pointer'\n    },\n    okBtn: {\n        color: \"#fff!important\",\n        marginRight: '20px'\n    },\n    footer: {\n        textAlign: 'center'\n    }\n});\nconst { selector: currentSelector, types } = storeLogin;\n\n\nconst selector = createSelector(\n    currentSelector,\n    (current) => ({\n        ...current,\n    }),\n);\nfunction Wallet(props: any) {\n    const theme = useTheme() as any;\n    const state = useSelector(selector);\n    const ref = useRef<any>()\n    const [disabledBtn, setDisabledBtn] = useState(true);\n    const dispatch = useDispatch();\n    const { t }: { t: any, i18n: any } = useTranslation();\n    const [useDisabled, setUseDisabled] = useState(true);\n\n    const [openDialog, setOpenDialog] = useState(false);\n\n    const [alert, setAlert] = useState<any>({\n        open: false,\n        severity: 'success',\n        message: ''\n    })\n    const form = useRef<UserInfo>({});\n    const userName = useRef<string>('');\n    const { classes } = props;\n    useRouterBeforeEach();\n    const changeFrom = (type: string, e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        if(type === 'userName'){\n            userName.current = e.target.value;\n            return\n        }\n        setDisabledBtn(false)\n        const formData: UserInfo = {};\n        formData[type] = e.target.value;\n        form.current = {\n            ...form.current,\n            ...formData\n        }\n    }\n    const submit = () => {\n        dispatch({\n            type: types.UPDATE_USERINFO,\n            payload: form.current,\n            callback: (res: any) => {\n                if (res.status === '200') {\n                    setAlert({\n                        ...alert,\n                        open: true,\n                        severity: 'success',\n                        message: t(\"common.success\")\n                    })\n                } else {\n                    setAlert({\n                        ...alert,\n                        open: true,\n                        severity: 'error',\n                        message: t(\"common.fail\")\n                    })\n                }\n                setDisabledBtn(true);\n            }\n        });\n    }\n\n    const Delete = () => {\n        setOpenDialog(true)\n    }\n    const submitDelete = () => {\n        dispatch({\n            type: types.DELETE_USERINFO,\n            callback: (res: any) => {\n                if (res.status === '200') {\n                    setAlert({\n                        ...alert,\n                        open: true,\n                        severity: 'success',\n                        message: t(\"common.success\")\n                    })\n                } else {\n                    setAlert({\n                        ...alert,\n                        open: true,\n                        severity: 'error',\n                        message: t(\"common.fail\")\n                    })\n                }\n                setOpenDialog(false)\n            }\n        });\n    }\n    const handleClose = () => {\n        setOpenDialog(false)\n    }\n    const closeAlert = () => {\n        setAlert({\n            ...alert,\n            open: false\n        })\n    }\n    const changeUserName = async () => {\n        if(useDisabled){\n            setUseDisabled(false);\n            setTimeout(() => {\n                ref.current.focus();\n            }, 30)\n        }else{\n            try {\n                const code = await getQrCode({ address: state.userInfo.wallet_addr, opt:2 });\n                const sign = await getSign(state.userInfo.wallet_addr,`STCSCAN_UPDATE_ADDR_CODE:${code.data}`,1);\n                const res = await updateUserName({\n                    new:userName.current,\n                    old:state.userInfo.wallet_addr,\n                    sign,\n                })\n                if (res.status === '200') {\n                    setAlert({\n                        ...alert,\n                        open: true,\n                        severity: 'success',\n                        message: t(\"common.success\")\n                    })\n                    setTimeout(()=>{\n                        window.location.reload();\n                    },3000)\n                } else {\n                    setAlert({\n                        ...alert,\n                        open: true,\n                        severity: 'error',\n                        message: t(\"common.fail\")\n                    })\n                }\n            } catch (error) {\n                console.error(error)\n            }\n            setUseDisabled(true);\n        }\n    }\n    return <>\n        {state.userInfo.wallet_addr ? <Card className={classes.from}>\n            <InputLabel className={classes.formLabel} error={false}>\n                <div className={classes.labelName}>\n                    {t('user.Username')}：\n                </div>\n                <div className={classes.labelItem}>\n                    <Input sx={{ '.Mui-disabled': { textFillColor: theme.palette.mode === 'dark' ? '#fff' : \"#000\" } }} onChange={(e) => { changeFrom('userName', e) }} disabled={useDisabled} defaultValue={state.userInfo.wallet_addr} inputRef={ref} className={classes.labelItem} />\n                    <Button onClick={changeUserName}>\n                        {useDisabled ? t('user.Edit') : t('user.Confirm')}\n                    </Button>\n                </div>\n            </InputLabel>\n\n            <InputLabel className={classes.formLabel} error={false}>\n                <div className={classes.labelName}>\n                    {t('user.Email address')}：\n                </div>\n                <div className={classes.labelItem}>\n                    <Input defaultValue={state.userInfo.e_mail} onChange={(e) => { changeFrom('email', e) }} placeholder={t('user.Email address placeholder')} className={classes.labelItem} />\n                </div>\n            </InputLabel>\n            <InputLabel className={classes.formLabel} error={false}>\n                <div className={classes.labelName}>\n                    {t('user.Public Profile Picture')}：\n                </div>\n                <div className={classes.labelItem}>\n                    <Input defaultValue={state.userInfo.avatar} onChange={(e) => { changeFrom('avatar', e) }} placeholder={t('user.Picture placeholder')} className={classes.labelItem} />\n                </div>\n            </InputLabel>\n            <InputLabel className={classes.formLabel} error={false}>\n                <div className={classes.labelName}>\n                    {t('user.twitter name')}：\n                </div>\n                <div className={classes.labelItem}>\n                    <Input defaultValue={state.userInfo.twitter_name} onChange={(e) => { changeFrom('twitter', e) }} placeholder={t('user.twitter placeholder')} className={classes.labelItem} />\n                </div>\n            </InputLabel>\n            <InputLabel className={classes.formLabel} error={false}>\n                <div className={classes.labelName}>\n                    {t('user.discord name')}：\n                </div>\n                <div className={classes.labelItem}>\n                    <Input defaultValue={state.userInfo.discord_name} onChange={(e) => { changeFrom('discord', e) }} placeholder={t('user.discord placeholder')} className={classes.labelItem} />\n                </div>\n            </InputLabel>\n            <InputLabel className={classes.formLabel} error={false}>\n                <div className={classes.labelName}>\n                    {t('user.telegram name')}：\n                </div>\n                <div className={classes.labelItem}>\n                    <Input defaultValue={state.userInfo.telegram_name} onChange={(e) => { changeFrom('telegram', e) }} placeholder={t('user.telegram placeholder')} className={classes.labelItem} />\n                </div>\n            </InputLabel>\n            <InputLabel className={classes.formLabel} error={false}>\n                <div className={classes.labelName}>\n                    {t('user.Profile')}：\n                </div>\n                <div className={classes.labelItem}>\n                    <TextareaAutosize\n                        aria-label=\"minimum height\"\n                        minRows={3}\n                        defaultValue={state.userInfo.profile}\n                        onChange={(e) => { changeFrom('profile', e) }}\n                        className={classes.labelItem}\n                    />\n                </div>\n            </InputLabel>\n            <div className={classes.footer}>\n                <Button onClick={submit} variant=\"contained\" className={classes.okBtn} disabled={disabledBtn}>\n                    {t('user.save change')}\n                </Button>\n\n                <Button onClick={Delete} variant=\"contained\" color=\"error\">\n                    {t('user.Delete User')}\n                </Button>\n            </div>\n            <Dialog\n                sx={{\n                    \"& .MuiDialog-paper\": {\n                        backgroundColor: theme.palette.background.default,\n                        color: theme.palette.getContrastText(theme.palette.background.paper),\n                    }\n                }}\n                open={openDialog}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    {t('user.warning')}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText style={{\n                        color: '#fff'\n                    }}>\n                        {t('user.warning tip')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose}>Disagree</Button>\n                    <Button onClick={submitDelete} autoFocus>\n                        Agree\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </Card> : <Loading />}\n        <Snackbar open={alert.open} autoHideDuration={6000} onClose={closeAlert}>\n            <Alert variant=\"filled\" severity={alert.severity} sx={{ width: '100%' }}>\n                {alert.message}\n            </Alert>\n        </Snackbar>\n    </>\n}\n\nWallet.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(useStyles)(Wallet);\n"],"sourceRoot":""}