{"version":3,"sources":["common/View/CenteredView/index.tsx","modules/Tools/index.tsx"],"names":["Index","this","props","children","className","classes","classNames","root","container","spacing","justify","gridItem","item","xs","sm","md","col","React","PureComponent","withStyles","theme","createStyles","breakpoints","down","padding","up","margin","width","display","flexDirection","justifyContent","maxWidth","onPublicKeyChange","event","input_public_key","target","value","setState","onTransformPublickKeyToReceiptIdentifier","a","inputPublicKey","document","getElementById","length","alert","receipt_identifier","encoding","publicKeyToReceiptIdentifier","output_receipt_identifier","onReceiptIdentifierChange","input_receipt_identifier","onTransformReceiptIdentifierToAddress","inputReceiptIdentifier","address","decodedReceiptIdentifier","decodeReceiptIdentifier","accountAddress","output_address","state","t","title","card","cardHeader","variant","searchField","id","textField","label","InputLabelProps","textFieldLabel","onChange","button","color","onClick","search","resultField","paddingTop","alignItems","flex","header","borderBottom","fontWeight","cardContainer","marginBottom","blocks","paddingLeft","paddingRight","fontSize","metric","blocksAndTransactions","flexWrap","transactions","blocksSpacer","transactionsSpacer","paddingBottom","marginRight","height","minWidth","marginLeft","withTranslation"],"mappings":"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","file":"static/js/21.9a012eb3.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { createStyles, withStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = (theme: Theme) => createStyles({\n  [theme.breakpoints.down('sm')]: {\n    root: {\n      padding: theme.spacing(1),\n    },\n  },\n  [theme.breakpoints.up('sm')]: {\n    root: {\n      padding: theme.spacing(2),\n    },\n  },\n  root: {\n    margin: 0,\n    width: '100%',\n  },\n  col: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    maxWidth: 1200,\n    width: '100%',\n  },\n  gridItem: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n});\n\ninterface ExternalProps {\n  children?: any,\n  className?: string,\n}\n\ninterface InternalProps {\n  classes: any,\n}\n\ninterface Props extends ExternalProps, InternalProps {}\n\nclass Index extends React.PureComponent<Props> {\n  render() {\n    const { children, className, classes } = this.props;\n    return (\n      <Grid\n        className={classNames(className, classes.root)}\n        container\n        spacing={0}\n        justify=\"center\"\n      >\n        <Grid className={classes.gridItem} item xs={12} sm={12} md={10}>\n          <div className={classes.col}>{children}</div>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(Index);\n","import React, { PureComponent } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { encoding } from '@starcoin/starcoin';\nimport { createStyles, Theme, withStyles } from '@material-ui/core/styles';\nimport Helmet from 'react-helmet';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport CenteredView from '@/common/View/CenteredView';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = (theme: Theme) => createStyles({\n  root: {\n    padding: theme.spacing(1) * 2,\n    paddingTop: 0,\n    alignItems: 'center',\n    display: 'flex',\n    flex: '1 1 auto',\n  },\n  [theme.breakpoints.down('sm')]: {\n    header: {\n      padding: theme.spacing(1),\n    },\n  },\n  [theme.breakpoints.up('sm')]: {\n    header: {\n      padding: theme.spacing(1) * 2,\n    },\n  },\n  header: {\n    alignItems: 'center',\n    borderBottom: '1px solid rgba(0, 0, 0, 0.075)',\n    display: 'flex',\n  },\n  title: {\n    fontWeight: 700,\n  },\n  [theme.breakpoints.down('sm')]: {\n    cardContainer: {\n      marginBottom: theme.spacing(1),\n    },\n    blocks: {\n      marginBottom: theme.spacing(1),\n    },\n    cardHeader: {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1),\n    },\n    searchField: {\n      padding: theme.spacing(1),\n    },\n    resultField: {\n      padding: theme.spacing(1),\n    },\n    title: {\n      fontSize: '1.125rem',\n    },\n    metric: {\n      paddingLeft: theme.spacing(2),\n    }\n  },\n  [theme.breakpoints.up('sm')]: {\n    cardContainer: {\n      marginBottom: theme.spacing(2),\n    },\n    cardHeader: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n    },\n    searchField: {\n      padding: theme.spacing(2),\n    },\n    resultField: {\n      padding: theme.spacing(2),\n    },\n    title: {\n      fontSize: '1.325rem',\n    },\n    metric: {\n      paddingLeft: theme.spacing(4),\n    }\n  },\n  [theme.breakpoints.down('md')]: {\n    blocksAndTransactions: {\n      flexWrap: 'wrap',\n    },\n    blocks: {\n      width: '100%',\n      marginBottom: theme.spacing(2),\n    },\n    transactions: {\n      width: '100%'\n    },\n    textFieldLabel: {\n      fontSize: '0.75em'\n    }\n  },\n  [theme.breakpoints.up('md')]: {\n    blocks: {\n      width: '50%',\n    },\n    blocksSpacer: {\n      paddingRight: theme.spacing(1),\n    },\n    transactions: {\n      width: '50%',\n    },\n    transactionsSpacer: {\n      paddingLeft: theme.spacing(1),\n    },\n    textFieldLabel: {\n      fontSize: '1em'\n    }\n  },\n  cardContainer: {\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardHeader: {\n    alignItems: 'center',\n    borderBottom: '1px solid rgba(0, 0, 0, 0.075)',\n    display: 'flex',\n    justifyContent: 'space-between',\n    paddingBottom: theme.spacing(2),\n    paddingTop: theme.spacing(2),\n  },\n  blocksAndTransactions: {\n    display: 'flex',\n  },\n  blocks: {\n    flex: '1 1 auto',\n  },\n  blocksSpacer: {},\n  transactionsSpacer: {},\n  transactions: {\n    flex: '1 1 auto',\n  },\n  searchField: {\n    alignItems: 'center',\n    display: 'flex',\n    flex: '1 1 auto',\n  },\n  resultField: {\n    alignItems: 'center',\n    display: 'flex',\n    flex: '1 1 auto',\n  },\n  textField: {\n    display: 'flex',\n    flex: '1 1 auto',\n    marginRight: theme.spacing(1),\n  },\n  textFieldLabel: {},\n  button: {\n    height: theme.spacing(5),\n    minWidth: '8rem',\n    maxWidth: '4rem',\n    marginLeft: theme.spacing(1),\n  },\n  search: {\n  },\n});\n\ninterface IndexProps {\n  classes: any;\n  t: any,\n}\n\ninterface IndexState {\n  input_public_key: string,\n  output_receipt_identifier: string,\n  input_receipt_identifier: string,\n  output_address: string\n}\n\nclass Index extends PureComponent<IndexProps, IndexState> {\n  constructor(props: IndexProps) {\n    super(props);\n    this.state = {\n      input_public_key: '',\n      output_receipt_identifier: '',\n      input_receipt_identifier: '',\n      output_address: ''\n    };\n  }\n\n  onPublicKeyChange = (event: any) => {\n    const { value: input_public_key } = event.target;\n    this.setState({ input_public_key });\n  };\n\n  onTransformPublickKeyToReceiptIdentifier = async () => {\n    const inputPublicKey = (document.getElementById('publicKeyInput') as HTMLInputElement).value;\n    let receipt_identifier:string;\n    if (inputPublicKey.length !== 66) {\n      alert('Please input the correct public key!'); // eslint-disable-line no-alert\n      receipt_identifier = '';\n    } else {\n      receipt_identifier = encoding.publicKeyToReceiptIdentifier(inputPublicKey);\n    }\n    this.setState({ output_receipt_identifier: receipt_identifier });\n  }\n\n  onReceiptIdentifierChange = (event: any) => {\n    const { value: input_receipt_identifier } = event.target;\n    this.setState({ input_receipt_identifier });\n  };\n\n  onTransformReceiptIdentifierToAddress = async () => {\n    const inputReceiptIdentifier = (document.getElementById('receiptIdentifierInput') as HTMLInputElement).value;\n    let address:string;\n    if (inputReceiptIdentifier.length !== 88) {\n      alert('Please input the correct receipt identifier!'); // eslint-disable-line no-alert\n      address = '';\n    } else {\n      const decodedReceiptIdentifier = encoding.decodeReceiptIdentifier(inputReceiptIdentifier);\n      address = `0x${decodedReceiptIdentifier.accountAddress}`;\n    }\n    this.setState({ output_address: address });\n  }\n\n  render() {\n    const { t, classes } = this.props;\n    const title = t('header.tools');\n    return (\n      <div>\n        <Helmet>\n          <title>{title}</title>\n        </Helmet>\n\n        <CenteredView>\n          <Card className={this.props.classes.card}>\n            <div className={this.props.classes.cardHeader}>\n              <Typography className={classes.title} variant=\"h4\">{t('tools.publickey_to_receipt_identifier')}</Typography>\n            </div>\n            <div className={classes.searchField}>\n              <TextField\n                id=\"publicKeyInput\"\n                className={classes.textField}\n                value={this.state.input_public_key}\n                label={t('tools.input_publickey_hint')}\n                InputLabelProps={{ className: classes.textFieldLabel }}\n                onChange={this.onPublicKeyChange}\n              />\n            </div>\n            <Button\n              className={classes.button}\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={this.onTransformPublickKeyToReceiptIdentifier}\n            >\n              <Typography className={classes.search} variant=\"body1\">\n                {t('tools.transform')}\n              </Typography>\n            </Button>\n            <div className={classes.resultField}>\n              <TextField\n                id=\"standard-basic\"\n                className={classes.textField}\n                value={this.state.output_receipt_identifier}\n                label={t('tools.output_receipt_identifier_hint')}\n                InputLabelProps={{ className: classes.textFieldLabel }}\n              />\n            </div>\n          </Card>\n        </CenteredView>\n\n        <CenteredView>\n          <Card className={this.props.classes.card}>\n            <div className={this.props.classes.cardHeader}>\n              <Typography className={classes.title} variant=\"h4\">{t('tools.receipt_identifier_to_address')}</Typography>\n            </div>\n            <div className={classes.searchField}>\n              <TextField\n                id=\"receiptIdentifierInput\"\n                className={classes.textField}\n                value={this.state.input_receipt_identifier}\n                label={t('tools.input_receipt_identifier_hint')}\n                InputLabelProps={{ className: classes.textFieldLabel }}\n                onChange={this.onReceiptIdentifierChange}\n              />\n            </div>\n            <Button\n              className={classes.button}\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={this.onTransformReceiptIdentifierToAddress}\n            >\n              <Typography className={classes.search} variant=\"body1\">\n                {t('tools.transform')}\n              </Typography>\n            </Button>\n            <div className={classes.resultField}>\n              <TextField\n                id=\"standard-basic-2\"\n                className={classes.textField}\n                value={this.state.output_address}\n                label={t('tools.output_address_hint')}\n                InputLabelProps={{ className: classes.textFieldLabel }}\n              />\n            </div>\n          </Card>\n        </CenteredView>\n\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(withTranslation()(Index));\n"],"sourceRoot":""}