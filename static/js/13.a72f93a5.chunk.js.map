{"version":3,"sources":["common/View/CenteredView/index.tsx","common/Link/index.tsx","rootStore/loading/selector.ts","utils/formatNumber.ts","utils/formatTime.ts","common/TimeAgo/index.tsx","common/Time/index.tsx","common/Table/Column/index.tsx","common/Table/index.tsx","modules/Transactions/components/TransactionSummary/index.tsx","modules/Transactions/components/Table/index.tsx","modules/Blocks/components/Table/index.tsx","modules/Home/index.tsx","modules/Home/adapter.ts"],"names":["Index","this","props","children","className","classes","classNames","root","container","spacing","justify","gridItem","item","xs","sm","md","col","React","PureComponent","withStyles","theme","createStyles","breakpoints","down","padding","up","margin","width","display","flexDirection","justifyContent","maxWidth","linkText","path","title","variantIn","variant","white","absolute","newTab","onClick","classNameLink","link","linkWhite","commonLink","cloneElement","startsWith","href","target","undefined","to","overflow","textOverflow","whiteSpace","color","palette","primary","main","fontWeight","typography","fontWeightRegular","textDecoration","dark","createLoadingSelector","actions","state","some","action","get","number","optionsIn","options","value","BigNumber","decimalPlaces","trimZerosUnsafe","toString","toFormat","formatTime","time","language","timeMS","parseInt","Date","now","toLocaleString","locale","timeago","timer","status","flip","bind","window","setInterval","clearInterval","newStatus","setState","i18n","Typography","withTranslation","TimeAgo","name","values","numeric","minWidth","visibleAt","firstCol","getRowHeightIn","getRowHeight","idx","wrapValue","textRowBase","row","cells","map","style","rowHeight","height","pad","baseRow","oddRow","element","alwaysVisible","header","Hidden","xsDown","smDown","mdDown","lgDown","xlDown","implementation","paddingLeft","flex","alignItems","borderBottom","minHeight","fontFamily","fontSize","text","fontWeightBold","secondary","backgroundColor","textAlign","columns","Column","paddingRight","TransactionSummary","transaction","isTransaction","source","payloadInHex","user_transaction","raw_txn","payload","txnPayload","encoding","decodeTransactionPayload","type","Object","keys","getNetwork","transaction_hash","rightHeader","timestamp","expiration_timestamp_secs","paddingBottom","paddingTop","marginRight","transactions","_id","blocks","authorVisibleAt","t","heightValues","timeValues","gasUsedValues","authorValues","forEach","block","blockUrl","authorUrl","author","push","formatNumber","gas_used","transactionsCol","validatorCol","onChange","event","onSearch","pushLocation","trim","renderCard","url","content","cardClassName","cardSpacerClassName","Card","card","cardHeader","Button","button","search","epochData","location","newNetwork","network","localStorage","setItem","getBlockList","page","getTransactionList","getEpochData","then","data","blockList","transactionList","blocksHit","contents","slice","metrics","start_time","start_block_number","end_block_number","block_time_target","toFixed","length","totalDiff","i","difficulty_number","averageBlockDiff","Number","endTime","startTime","averageBlockTime","averageHashRate","transactionsList","CenteredView","gutterBottom","cardContainer","searchField","TextField","id","textField","label","InputLabelProps","textFieldLabel","Grid","metric","lg","metricTitle","blocksAndTransactions","sizeVisibleAt","blocksSpacer","transactionsSpacer","defaultProps","marginBottom","flexWrap","marginTop","borderLeft","currentSelectorBlocks","storeBlocks","selector","actionsBlocks","currentSelectorTransactions","storeTransactions","actionsTransactions","loadingSelector","typesBlocks","typesTransactions","createSelector","currentBlocks","currentTransactions","loading","connect"],"mappings":"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","file":"static/js/13.a72f93a5.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { createStyles, withStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = (theme: Theme) => createStyles({\n  [theme.breakpoints.down('sm')]: {\n    root: {\n      padding: theme.spacing(1),\n    },\n  },\n  [theme.breakpoints.up('sm')]: {\n    root: {\n      padding: theme.spacing(2),\n    },\n  },\n  root: {\n    margin: 0,\n    width: '100%',\n  },\n  col: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    maxWidth: 1200,\n    width: '100%',\n  },\n  gridItem: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n});\n\ninterface ExternalProps {\n  children?: any,\n  className?: string,\n}\n\ninterface InternalProps {\n  classes: any,\n}\n\ninterface Props extends ExternalProps, InternalProps {}\n\nclass Index extends React.PureComponent<Props> {\n  render() {\n    const { children, className, classes } = this.props;\n    return (\n      <Grid\n        className={classNames(className, classes.root)}\n        container\n        spacing={0}\n        justify=\"center\"\n      >\n        <Grid className={classes.gridItem} item xs={12} sm={12} md={10}>\n          <div className={classes.col}>{children}</div>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(Index);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { createStyles, withStyles, Theme } from '@material-ui/core/styles';\nimport { Variant } from '@material-ui/core/styles/createTypography';\nimport Typography from '@material-ui/core/Typography';\nimport { Link as RRLink } from 'react-router-dom';\n\nconst useStyles = (theme: Theme) => createStyles({\n  commonLink: {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n  },\n  link: {\n    color: theme.palette.primary.main,\n    fontWeight: theme.typography.fontWeightRegular,\n    textDecoration: 'none',\n    '&:hover': {\n      color: theme.palette.primary.dark,\n      textDecoration: 'underline',\n    },\n  },\n  linkWhite: {\n    color: '#fff',\n    fontWeight: theme.typography.fontWeightRegular,\n    textDecoration: 'underline',\n    '&:hover': {\n      color: 'rgba(255, 255, 255, 0.87)',\n      textDecoration: 'underline',\n    },\n  },\n});\n\ninterface ExternalProps {\n  path: string,\n  title: string | React.CElement<any, any>,\n  variant?: Variant,\n  white?: boolean,\n  absolute?: boolean,\n  newTab?: boolean,\n  onClick?: () => void,\n  className?: string,\n}\n\ninterface InternalProps {\n  classes: any,\n}\n\ninterface Props extends ExternalProps, InternalProps {}\n\nclass Index extends React.PureComponent<Props> {\n  render() {\n    const { path, title, variant: variantIn, white, absolute, newTab, onClick, className, classes } = this.props;\n    const variant = variantIn || 'body1';\n    const classNameLink = classNames(\n      {\n        [classes.link]: !white,\n        [classes.linkWhite]: !!white,\n      },\n      classes.commonLink,\n    );\n    let linkText;\n    if (typeof title === 'string') {\n      linkText = (\n        <Typography\n          variant={variant}\n          className={classNames(classNameLink, className)}\n        >\n          {title}\n        </Typography>\n      );\n    } else {\n      linkText = React.cloneElement(\n        title,\n        {\n          ...title.props,\n          className: classNames(classNameLink, className, title.props.className),\n        },\n        title.props.children,\n      );\n    }\n\n    if (absolute || path.startsWith('http') || newTab) {\n      return (\n        // eslint-disable-next-line react/jsx-no-target-blank\n        <a\n          className={classNameLink}\n          href={path}\n          target={newTab ? '_blank' : undefined}\n          onClick={onClick}\n        >\n          {linkText}\n        </a>\n      );\n    }\n\n    return (\n      <RRLink className={classNameLink} to={path} onClick={onClick}>\n        {linkText}\n      </RRLink>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(Index);\n","import { createSelector } from 'reselect';\nimport get from 'lodash/get';\n\nconst createLoadingSelector = (actions: any) => (state: any) => {\n  return actions.some((action: any) => get(state, `loading.${action}`));\n};\n\nexport default createLoadingSelector;","import BigNumber from 'bignumber.js';\n\ninterface Options {\n  decimalPlaces?: number,\n  trimZerosUnsafe?: boolean,\n}\n\nexport default (number: number | string | bigint, optionsIn?: Options): string => {\n  const options = optionsIn || {};\n  const value = new BigNumber(number as string);\n  const decimalPlaces =\n    options.decimalPlaces == null\n      ? value.decimalPlaces()\n      : options.decimalPlaces;\n  return options.trimZerosUnsafe\n    ? value.decimalPlaces(decimalPlaces).toString()\n    : value.toFormat(decimalPlaces);\n};\n","import * as timeago from 'timeago.js';\n\nconst TWO_DAYS_MS = 2 * 24 * 60 * 60 * 1000;\n\nconst formatTime = (time: number, language: string) => {\n  let value;\n  const timeMS = typeof time === 'string' ? parseInt(time) : time;\n  if (Date.now() - timeMS > TWO_DAYS_MS) {\n    value = new Date(timeMS).toLocaleString();\n  } else {\n    // timeago.js supports zh_CN or zh_TW, instead of zh\n    const locale = language === 'zh' ? 'zh_CN' : language;\n    value = timeago.format(timeMS, locale);\n  }\n  return value;\n};\n\nexport default formatTime;","import React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { createStyles, withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport formatTime from '@/utils/formatTime';\n\nconst useStyles = () => createStyles({\n  root: {\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n});\n\ninterface ExternalProps {\n  time: number,\n  className?: string,\n}\n\ninterface InternalProps {\n  classes: any,\n  i18n: any,\n}\n\ninterface Props extends ExternalProps, InternalProps {}\n\ninterface IndexState {\n  status: boolean,\n}\n\nclass Index extends React.PureComponent<Props, IndexState> {\n  private timer: number = 0;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      status: true,\n    };\n\n    this.flip = this.flip.bind(this);\n  }\n\n  componentDidMount() {\n    this.timer = window.setInterval(this.flip, 1000);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timer);\n  }\n\n  flip() {\n    // eslint-disable-next-line react/no-access-state-in-setstate\n    const newStatus = !this.state.status;\n    this.setState({ status: newStatus });\n  }\n\n  render() {\n    const { time, i18n, className, classes } = this.props;\n    const value = formatTime(time, i18n.language);\n    return (\n      <Typography className={className} classes={classes}>{value}</Typography>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(withTranslation()(Index));\n","import React from 'react';\nimport { createStyles, withStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport TimeAgo from '@/common/TimeAgo';\n\nconst useStyles = () => createStyles({\n  root: {\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n});\n\ninterface ExternalProps {\n  time: number,\n  className?: string,\n}\n\ninterface InternalProps {\n  classes: any,\n}\n\ninterface Props extends ExternalProps, InternalProps {}\n\nclass Index extends React.PureComponent<Props> {\n  render() {\n    const { time, className, classes } = this.props;\n    return (\n      <TimeAgo\n        className={classNames(className, classes.root)}\n        time={time}\n      />\n    );\n  }\n}\n\nexport default withStyles(useStyles)(Index);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { createStyles, withStyles, Theme } from '@material-ui/core/styles';\nimport Hidden from '@material-ui/core/Hidden';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = (theme: Theme) => createStyles({\n  [theme.breakpoints.down('sm')]: {\n    pad: {\n      paddingLeft: theme.spacing(1),\n    },\n    firstCol: {\n      paddingLeft: theme.spacing(1),\n    },\n  },\n  [theme.breakpoints.up('sm')]: {\n    pad: {\n      paddingLeft: theme.spacing(3),\n    },\n    firstCol: {\n      paddingLeft: theme.spacing(2),\n    },\n  },\n  [theme.breakpoints.up('md')]: {\n    pad: {\n      paddingLeft: theme.spacing(5),\n    },\n  },\n  root: {\n    flex: '1 1 auto',\n    flexDirection: 'column',\n  },\n  minWidth: {\n    minWidth: '0',\n  },\n  alwaysVisible: {\n    display: 'flex',\n  },\n  baseRow: {\n    display: 'flex',\n    alignItems: 'center',\n    borderBottom: '1px solid rgba(0, 0, 0, 0.075)',\n    minHeight: 48,\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n  row: {\n    fontFamily: theme.typography.fontFamily,\n    fontSize: 14,\n    fontWeight: theme.typography.fontWeightRegular,\n    color: theme.palette.text.primary,\n  },\n  header: {\n    fontFamily: theme.typography.fontFamily,\n    fontSize: 14,\n    fontWeight: theme.typography.fontWeightBold,\n    color: theme.palette.text.secondary,\n  },\n  textRowBase: {\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n  oddRow: {\n    backgroundColor: 'rgba(0, 0, 0, 0.075)',\n  },\n  numeric: {\n    justifyContent: 'flex-end',\n    textAlign: 'right',\n  },\n  pad: {},\n  firstCol: {},\n});\n\ninterface ExternalProps {\n  name: string,\n  values: Array<string | React.CElement<any, any>>,\n  numeric?: boolean,\n  minWidth?: boolean,\n  visibleAt?: string,\n  firstCol: boolean,\n  getRowHeight?: (idx: number) => number | null,\n  className?: string,\n}\n\ninterface InternalProps {\n classes: any,\n}\n\ninterface Props extends ExternalProps, InternalProps {}\n\nclass Index extends React.PureComponent<Props> {\n  render() {\n    const { name, values, numeric, minWidth, visibleAt, firstCol, getRowHeight: getRowHeightIn, className, classes } = this.props;\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const getRowHeight = getRowHeightIn || ((idx: number) => null);\n    const wrapValue = (value: any) => (\n      (typeof value === 'string') ? (\n        <Typography\n          className={classNames(classes.textRowBase, classes.row)}\n          variant=\"body1\"\n        >\n          {value}\n        </Typography>\n      ) : (\n        value\n      )\n    );\n    const cells = values.map((value, idx) => {\n      let style;\n      const rowHeight = getRowHeight(idx);\n      if (rowHeight != null) {\n        style = { height: rowHeight };\n      }\n      return (\n        <div\n          key={idx}\n          className={classNames({\n            [classes.pad]: !firstCol,\n            [classes.firstCol]: firstCol,\n            [classes.baseRow]: true,\n            [classes.row]: true,\n            [classes.oddRow]: idx % 2 === 1,\n            [classes.numeric]: !!numeric,\n          })}\n          style={style}\n        >\n          {wrapValue(value)}\n        </div>\n      );\n    });\n    const element = (\n      <div\n        className={classNames(\n          {\n            [classes.root]: true,\n            [classes.alwaysVisible]: true,\n            [classes.minWidth]: !minWidth,\n          },\n          className,\n        )}\n      >\n        <div\n          className={classNames({\n            [classes.pad]: !firstCol,\n            [classes.firstCol]: firstCol,\n            [classes.baseRow]: true,\n            [classes.numeric]: !!numeric,\n          })}\n        >\n          <Typography\n            className={classNames(classes.textRowBase, classes.header)}\n            variant=\"body1\"\n          >\n            {name}\n          </Typography>\n        </div>\n        {cells}\n      </div>\n    );\n\n    return (\n      <Hidden\n        xsDown={visibleAt === 'xs'}\n        smDown={visibleAt === 'sm'}\n        mdDown={visibleAt === 'md'}\n        lgDown={visibleAt === 'lg'}\n        xlDown={visibleAt === 'xl'}\n        implementation=\"js\"\n      >\n        {element}\n      </Hidden>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(Index);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { createStyles, withStyles, Theme } from '@material-ui/core/styles';\nimport Column from './Column';\n\nconst useStyles = (theme: Theme) => createStyles({\n  [theme.breakpoints.down('sm')]: {\n    root: {\n      '& > div:last-child > div': {\n        paddingRight: theme.spacing(1),\n      },\n    },\n  },\n  [theme.breakpoints.up('sm')]: {\n    root: {\n      '& > div:last-child > div': {\n        paddingRight: theme.spacing(2),\n      },\n    },\n  },\n  root: {\n    display: 'flex',\n  },\n});\n\ninterface ColumnType {\n  name: string,\n  className?: string,\n  values: Array<string | React.CElement<any, any>>,\n  numeric?: boolean,\n  visibleAt?: string,\n  minWidth?: boolean,\n}\n\ninterface ExternalProps {\n  columns: Array<ColumnType>,\n  getRowHeight?: (idx: number) => number | null,\n  className?: string,\n}\n\ninterface InternalProps {\n classes: any,\n}\n\ninterface Props extends ExternalProps, InternalProps {}\n\nclass Index extends React.PureComponent<Props> {\n  render() {\n    const { columns, getRowHeight: getRowHeightIn, className, classes } = this.props;\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const getRowHeight = getRowHeightIn || ((idx: number) => null);\n\n    return (\n      <div className={classNames(className, classes.root)}>\n        {columns.map((col, idx) => (\n          <Column\n            key={col.name}\n            className={col.className}\n            name={col.name}\n            values={col.values}\n            numeric={col.numeric}\n            visibleAt={col.visibleAt}\n            firstCol={idx === 0}\n            minWidth={col.minWidth}\n            getRowHeight={getRowHeight}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(Index);\n","import React, { PureComponent } from 'react';\nimport classNames from 'classnames';\nimport CommonTime from '@/common/Time';\nimport CommonLink from '@/common/Link';\nimport { getNetwork } from '@/utils/helper';\nimport { withStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { encoding } from '@starcoin/starcoin';\n\nconst useStyles = (theme: Theme) =>\n  createStyles({\n    [theme.breakpoints.down('sm')]: {\n      root: {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n      },\n    },\n    [theme.breakpoints.up('sm')]: {\n      root: {\n        paddingLeft: theme.spacing(1) * 2,\n        paddingRight: theme.spacing(1) * 2,\n      },\n    },\n    root: {\n      alignItems: 'center',\n      borderBottom: '1px solid rgba(0, 0, 0, 0.075)',\n      display: 'flex',\n      justifyContent: 'space-between',\n      paddingBottom: theme.spacing(1),\n      paddingTop: theme.spacing(1),\n    },\n    leftHeader: {\n      flex: '1 100 auto',\n      marginRight: theme.spacing(1),\n      minWidth: 150,\n    },\n    rightHeader: {\n      alignItems: 'center',\n      display: 'flex',\n      flex: '1 1 208px',\n      justifyContent: 'flex-end',\n      minWidth: '0',\n    },\n    time: {\n      marginRight: theme.spacing(1),\n    },\n  });\n\ninterface ExternalProps {\n  transaction: any;\n  className?: string;\n}\n\ninterface InternalProps {\n  classes: any;\n}\n\ninterface Props extends ExternalProps, InternalProps {}\n\nclass TransactionSummary extends PureComponent<Props> {\n  render() {\n    const { transaction, className, classes } = this.props;\n    const isTransaction = !!transaction;\n    const source = isTransaction ? transaction : transaction;\n    let payloadInHex = '';\n    if (source.user_transaction) {\n      payloadInHex = source.user_transaction.raw_txn.payload;\n    }\n    if (source.raw_txn) {\n      payloadInHex = source.raw_txn.payload;\n    }\n    const txnPayload = payloadInHex\n      ? encoding.decodeTransactionPayload(payloadInHex)\n      : [];\n    const type = Object.keys(txnPayload)[0];\n    return (\n      <div className={classNames(classes.root, className)}>\n        {type}&nbsp;\n        <CommonLink\n          path={`/${getNetwork()}/transactions/detail/${\n            source.transaction_hash\n          }`}\n          title={source.transaction_hash}\n        />\n        <div className={classes.rightHeader}>\n          <CommonTime\n            className={classes.time}\n            time={\n              isTransaction\n                ? source.timestamp\n                : source.raw_txn.expiration_timestamp_secs * 1000\n            }\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(TransactionSummary);\n","import React from 'react';\nimport TransactionSummary from '../TransactionSummary';\n\ninterface ExternalProps {\n  transactions: any,\n  className?: string,\n}\n\ninterface InternalProps {}\n\ninterface Props extends ExternalProps, InternalProps {}\n\nclass Index extends React.PureComponent<Props> {\n  render() {\n    const { transactions, className } = this.props;\n    return (\n      <div className={className}>\n        {transactions.map((transaction: any) => (\n          <TransactionSummary\n            key={transaction._id || transaction.transaction_hash}\n            transaction={transaction}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Index;\n","import React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { createStyles, withStyles } from '@material-ui/core/styles';\nimport Table from '@/common/Table';\nimport BaseRouteLink from '@/common/BaseRouteLink';\nimport formatNumber from '@/utils/formatNumber';\nimport { getNetwork } from '@/utils/helper';\nimport CommonLink from '@/common/Link';\nimport CommonTime from '@/common/Time';\n\nconst useStyles = () => createStyles({\n  transactionsCol: {\n    flex: '1 100 auto',\n  },\n  validatorCol: {\n    flex: '1 100 auto',\n  },\n});\n\ninterface ExternalProps {\n  blocks: any,\n  sizeVisibleAt: string,\n  authorVisibleAt: string,\n  className?: string,\n}\n\ninterface InternalProps {\n  classes: any,\n  t: any,\n}\n\ninterface Props extends ExternalProps, InternalProps {}\n\nclass Index extends React.PureComponent<Props> {\n  render() {\n    const { blocks, authorVisibleAt, className, classes, t } = this.props;\n    const heightValues: any[] = [];\n    const timeValues: any[] = [];\n    // const transactionsValues: any[] = [];\n    const gasUsedValues: any[] = [];\n    const authorValues: any[] = [];\n    blocks.forEach((block: any) => {\n      const header = block.header;\n      const blockUrl = `/${getNetwork()}/blocks/height/${header.number}`;\n      const authorUrl = `/${getNetwork()}/address/${header.author}`;\n      heightValues.push(<BaseRouteLink to={blockUrl}>{formatNumber(header.number)}</BaseRouteLink>);\n      timeValues.push(<CommonTime time={header.timestamp} />);\n      // transactionsValues.push(0);\n      gasUsedValues.push(formatNumber(parseInt(header.gas_used, 10)));\n      authorValues.push(\n        <CommonLink path={authorUrl} title={header.author} />\n      );\n    });\n    const columns = [\n      {\n        name: t('block.Height'),\n        values: heightValues,\n        minWidth: true,\n      },\n      {\n        name: t('common.Time'),\n        values: timeValues,\n        minWidth: true,\n      },\n      {\n        name: t('block.GasUsed'),\n        numeric: true,\n        values: gasUsedValues,\n        className: classes.transactionsCol,\n      },\n      {\n        name: t('block.Author'),\n        values: authorValues,\n        visibleAt: authorVisibleAt,\n        className: classes.validatorCol,\n      },\n    ];\n    return <Table className={className} columns={columns} />;\n  }\n}\n\nexport default withStyles(useStyles)(withTranslation()(Index));\n","import React, { PureComponent } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { withStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport CenteredView from '@/common/View/CenteredView';\nimport { getEpochData } from '@/utils/sdk';\nimport { getNetwork } from '@/utils/helper';\nimport formatTime from '@/utils/formatTime';\nimport formatNumber from '@/utils/formatNumber';\nimport BlockTable from '../Blocks/components/Table';\nimport TransactionTable from '../Transactions/components/Table';\n\nconst useStyles = (theme: Theme) => createStyles({\n  [theme.breakpoints.down('sm')]: {\n    cardContainer: {\n      marginBottom: theme.spacing(1),\n    },\n    blocks: {\n      marginBottom: theme.spacing(1),\n    },\n    cardHeader: {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1),\n    },\n    searchField: {\n      padding: theme.spacing(1),\n    },\n    title: {\n      fontSize: '1.125rem',\n    },\n    metric: {\n      paddingLeft: theme.spacing(2),\n    }\n  },\n  [theme.breakpoints.up('sm')]: {\n    cardContainer: {\n      marginBottom: theme.spacing(2),\n    },\n    cardHeader: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n    },\n    searchField: {\n      padding: theme.spacing(2),\n    },\n    title: {\n      fontSize: '1.325rem',\n    },\n    metric: {\n      paddingLeft: theme.spacing(4),\n    }\n  },\n  [theme.breakpoints.down('md')]: {\n    blocksAndTransactions: {\n      flexWrap: 'wrap',\n    },\n    blocks: {\n      width: '100%',\n      marginBottom: theme.spacing(2),\n    },\n    transactions: {\n      width: '100%'\n    },\n    textFieldLabel: {\n      fontSize: '0.75em'\n    }\n  },\n  [theme.breakpoints.up('md')]: {\n    blocks: {\n      width: '50%',\n    },\n    blocksSpacer: {\n      paddingRight: theme.spacing(1),\n    },\n    transactions: {\n      width: '50%',\n    },\n    transactionsSpacer: {\n      paddingLeft: theme.spacing(1),\n    },\n    textFieldLabel: {\n      fontSize: '1em'\n    }\n  },\n  root: {\n    alignItems: 'center',\n    display: 'flex',\n    flex: '1 1 auto',\n  },\n  cardContainer: {\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardHeader: {\n    alignItems: 'center',\n    borderBottom: '1px solid rgba(0, 0, 0, 0.075)',\n    display: 'flex',\n    justifyContent: 'space-between',\n    paddingBottom: theme.spacing(2),\n    paddingTop: theme.spacing(2),\n  },\n\n  blocksAndTransactions: {\n    display: 'flex',\n  },\n  blocks: {\n    flex: '1 1 auto',\n  },\n  blocksSpacer: {},\n  transactionsSpacer: {},\n  transactions: {\n    flex: '1 1 auto',\n  },\n  searchField: {\n    alignItems: 'center',\n    display: 'flex',\n    flex: '1 1 auto',\n  },\n  textField: {\n    display: 'flex',\n    flex: '1 1 auto',\n    marginRight: theme.spacing(1),\n  },\n  textFieldLabel: {},\n  button: {\n    height: theme.spacing(5),\n  },\n  search: {\n  },\n  title: {\n    fontWeight: 700\n  },\n  metric: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    borderLeft: '1px solid rgba(0, 0, 0, 0.075)',\n  }\n});\n\ninterface IndexProps {\n  classes: any;\n  t: any;\n  i18n: any;\n  blockList: any;\n  getBlockList: (data: any, callback?: any) => any;\n  transactionList: any;\n  getTransactionList: (data: any, callback?: any) => any;\n  pushLocation: (data: any) => any;\n  location: any;\n}\n\ninterface IndexState {\n  value: string,\n  epochData: any\n}\n\nclass Index extends PureComponent<IndexProps, IndexState> {\n  // eslint-disable-next-line react/static-property-placement\n  static defaultProps = {\n    blockList: null,\n    getBlockList: () => { },\n    transactionList: null,\n    getTransactionList: () => { },\n    pushLocation: () => { }\n  };\n\n  constructor(props: IndexProps) {\n    super(props);\n    this.state = {\n      value: '',\n      epochData: null\n    };\n  }\n\n  componentDidMount() {\n    // const currentNetwork = getNetwork();\n    /*\n    if (currentNetwork === 'main') {\n      window.location.href = '/main';\n    }\n    */\n\n    // check redirection\n    const { location } = this.props;\n    if (location.state) {\n      const newNetwork = location.state.network;\n      localStorage.setItem('network', newNetwork);\n      this.props.getBlockList({ network: newNetwork, page: 1 });\n      this.props.getTransactionList({ network: newNetwork, page: 1 });\n    } else {\n      this.props.getBlockList({ page: 1 });\n      this.props.getTransactionList({ page: 1 });\n    }\n    getEpochData().then(data => {\n      if (data) {\n        this.setState({ epochData: data });\n      }\n    });\n  }\n\n  onChange = (event: any) => {\n    const { value } = event.target;\n    this.setState({ value });\n  };\n\n  onSearch = () => {\n    this.props.pushLocation(`/search/${ this.state.value.trim() }`);\n  };\n\n  renderCard = (\n    title: string,\n    url: string,\n    content: any,\n    cardClassName: any,\n    cardSpacerClassName: any,\n  ) => (\n    <div className={cardClassName}>\n      <div className={cardSpacerClassName}>\n        <Card className={this.props.classes.card}>\n          <div className={this.props.classes.cardHeader}>\n            <Typography className={this.props.classes.title} variant=\"h4\">{title}</Typography>\n            <Button\n              className={this.props.classes.button}\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={() => this.props.pushLocation(url)}\n            >\n              <Typography className={this.props.classes.search} variant=\"body1\">\n                {this.props.t('home.viewAll')}\n              </Typography>\n            </Button>\n          </div>\n          {content}\n        </Card>\n      </div>\n    </div>\n  );\n\n  render() {\n    const { blockList, transactionList, classes, t, i18n } = this.props;\n    const blocksHit = blockList && blockList.contents && blockList.contents ? blockList.contents : [];\n    const blocks = blocksHit.slice(0, 12);\n    const transactionHit = transactionList && transactionList.contents ? transactionList.contents : [];\n    const transactions = transactionHit.slice(0, 15);\n    const metrics: any[] = [];\n    if (this.state.epochData) {\n      metrics.push(['Epoch', `${ this.state.epochData.number }th`]);\n      metrics.push([t('home.EpochStartTime'), formatTime(this.state.epochData.start_time, i18n.language)]);\n      metrics.push([t('home.StartEndBlock'), `${ formatNumber(this.state.epochData.start_block_number) } - ${ formatNumber(this.state.epochData.end_block_number) }`]);\n      metrics.push([t('home.TargetBlockTime'), formatNumber((this.state.epochData.block_time_target / 1000).toFixed(0))]);\n      if (blocks && blocks.length > 0 && this.state.epochData.block_time_target > 0) {\n        // const currentBlockDiff = Number(blocks[0]._source.header.difficulty);\n        // const currentHashRate = formatNumber((currentBlockDiff / this.state.epochData.block_time_target * 1000).toFixed(0));\n        let totalDiff = 0;\n        for (let i = 0; i < blocksHit.length; i++) {\n          totalDiff += blocksHit[i].header.difficulty_number;\n        }\n        const averageBlockDiff = Number(totalDiff / blocksHit.length);\n        const endTime = blocksHit[0].header.timestamp;\n        const startTime = blocksHit[blocksHit.length - 1].header.timestamp;\n        const averageBlockTime = Number((endTime - startTime) / blocksHit.length);\n        const averageHashRate = formatNumber((averageBlockDiff / averageBlockTime * 1000).toFixed(0));\n        metrics.push([t('home.CurrentHashRate'), averageHashRate]);\n      }\n    }\n    const transactionsList = transactions.length ? (\n      <TransactionTable\n        transactions={transactions}\n      />\n    ) : (\n      <CenteredView>\n        <div className={classes.header}>\n          <Typography variant=\"h5\" gutterBottom className={classes.title}>\n            {t('transaction.NoTransactionData')}\n          </Typography>\n        </div>\n      </CenteredView>\n    );\n    return (\n      <>\n        <div className={classes.cardContainer}>\n          <Card className={this.props.classes.card}>\n            <div className={this.props.classes.cardHeader}>\n              <Typography className={classes.title} variant=\"h4\">Starcoin {t('home.explorer')}</Typography>\n            </div>\n            <div className={classes.searchField}>\n              <TextField\n                id=\"standard-basic\"\n                className={classes.textField}\n                value={this.state.value}\n                label={t('home.searchHint')}\n                InputLabelProps={{ className: classes.textFieldLabel }}\n                onChange={this.onChange}\n              />\n              <Button\n                className={classes.button}\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={this.onSearch}\n              >\n                <Typography className={classes.search} variant=\"body1\">\n                  {t('home.search')}\n                </Typography>\n              </Button>\n            </div>\n          </Card>\n        </div>\n        <div className={classes.cardContainer}>\n          <Card className={this.props.classes.card}>\n            <Grid container className={classes.root} spacing={2}>\n              <Grid item xs={12}>\n                <Grid container justify=\"flex-start\" spacing={0}>\n                  {metrics.map((metric) => (\n                    <Grid key={metric[0]} item xs={6} md={4} lg={2}>\n                      <div className={classes.metric}>\n                        <Typography className={classes.metricTitle} variant=\"body2\">\n                          {metric[0]}\n                        </Typography>\n                        <Typography className={classes.title}>\n                          {metric[1]}\n                        </Typography>\n                      </div>\n                    </Grid>\n                  ))}\n                </Grid>\n              </Grid>\n            </Grid>\n          </Card>\n        </div>\n        <div className={classes.blocksAndTransactions}>\n          {this.renderCard(\n            t('home.ExploreBlocks'),\n            `/${ getNetwork() }/blocks/1`,\n            <BlockTable\n              blocks={blocks}\n              sizeVisibleAt=\"xs\"\n              authorVisibleAt=\"md\"\n            />,\n            classes.blocks,\n            classes.blocksSpacer,\n          )}\n          {this.renderCard(\n            t('home.ExploreTransactions'),\n            `/${ getNetwork() }/transactions/list`,\n            transactionsList,\n            classes.transactions,\n            classes.transactionsSpacer,\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(withTranslation()(Index));\n","import { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport createLoadingSelector  from '@/rootStore/loading/selector';\nimport { pushLocation }  from '@/rootStore/router/actions';\nimport storeBlocks from '@/Blocks/store';\nimport storeTransactions from '@/Transactions/store';\nimport * as typesBlocks from '@/Blocks/store/constants';\nimport * as typesTransactions from '@/Transactions/store/constants';\nimport Index from './index';\n\nconst { selector: currentSelectorBlocks, actions: actionsBlocks } = storeBlocks;\nconst { selector: currentSelectorTransactions, actions: actionsTransactions } = storeTransactions;\n\nconst loadingSelector = createLoadingSelector([typesBlocks.GET_BLOCK_LIST, typesTransactions.GET_TRANSACTION_LIST]);\n\nconst selector = createSelector(\n  currentSelectorBlocks,\n  currentSelectorTransactions,\n  loadingSelector,\n  (currentBlocks, currentTransactions, loading) => ({\n    blockList: currentBlocks.blockList,\n    transactionList: currentTransactions.transactionList,\n    loading\n  })\n);\n\nexport default connect(selector, {\n  getBlockList: actionsBlocks.getBlockList,\n  getTransactionList: actionsTransactions.getTransactionList,\n  pushLocation\n})(Index) as any;"],"sourceRoot":""}