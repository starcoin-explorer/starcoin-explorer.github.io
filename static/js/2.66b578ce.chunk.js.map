{"version":3,"sources":["../node_modules/markdown-it/lib/common/utils.js","../node_modules/@babel/runtime/helpers/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","../node_modules/@material-ui/core/esm/Grid/Grid.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/react-i18next/dist/es/withTranslation.js","../node_modules/uc.micro/categories/P/regex.js","../node_modules/markdown-it/lib/ruler.js","../node_modules/markdown-it/lib/token.js","../node_modules/markdown-it/index.js","../node_modules/markdown-it/lib/common/entities.js","../node_modules/mdurl/index.js","../node_modules/uc.micro/properties/Any/regex.js","../node_modules/uc.micro/categories/Cc/regex.js","../node_modules/uc.micro/categories/Z/regex.js","../node_modules/markdown-it/lib/common/html_re.js","../node_modules/markdown-it/lib/rules_inline/strikethrough.js","../node_modules/markdown-it/lib/rules_inline/emphasis.js","../node_modules/markdown-it/lib/index.js","../node_modules/mdurl/encode.js","../node_modules/mdurl/decode.js","../node_modules/mdurl/format.js","../node_modules/mdurl/parse.js","../node_modules/uc.micro/index.js","../node_modules/uc.micro/categories/Cf/regex.js","../node_modules/markdown-it/lib/helpers/index.js","../node_modules/markdown-it/lib/helpers/parse_link_label.js","../node_modules/markdown-it/lib/helpers/parse_link_destination.js","../node_modules/markdown-it/lib/helpers/parse_link_title.js","../node_modules/markdown-it/lib/renderer.js","../node_modules/markdown-it/lib/parser_core.js","../node_modules/markdown-it/lib/rules_core/normalize.js","../node_modules/markdown-it/lib/rules_core/block.js","../node_modules/markdown-it/lib/rules_core/inline.js","../node_modules/markdown-it/lib/rules_core/linkify.js","../node_modules/markdown-it/lib/rules_core/replacements.js","../node_modules/markdown-it/lib/rules_core/smartquotes.js","../node_modules/markdown-it/lib/rules_core/state_core.js","../node_modules/markdown-it/lib/parser_block.js","../node_modules/markdown-it/lib/rules_block/table.js","../node_modules/markdown-it/lib/rules_block/code.js","../node_modules/markdown-it/lib/rules_block/fence.js","../node_modules/markdown-it/lib/rules_block/blockquote.js","../node_modules/markdown-it/lib/rules_block/hr.js","../node_modules/markdown-it/lib/rules_block/list.js","../node_modules/markdown-it/lib/rules_block/reference.js","../node_modules/markdown-it/lib/rules_block/heading.js","../node_modules/markdown-it/lib/rules_block/lheading.js","../node_modules/markdown-it/lib/rules_block/html_block.js","../node_modules/markdown-it/lib/common/html_blocks.js","../node_modules/markdown-it/lib/rules_block/paragraph.js","../node_modules/markdown-it/lib/rules_block/state_block.js","../node_modules/markdown-it/lib/parser_inline.js","../node_modules/markdown-it/lib/rules_inline/text.js","../node_modules/markdown-it/lib/rules_inline/newline.js","../node_modules/markdown-it/lib/rules_inline/escape.js","../node_modules/markdown-it/lib/rules_inline/backticks.js","../node_modules/markdown-it/lib/rules_inline/link.js","../node_modules/markdown-it/lib/rules_inline/image.js","../node_modules/markdown-it/lib/rules_inline/autolink.js","../node_modules/markdown-it/lib/rules_inline/html_inline.js","../node_modules/markdown-it/lib/rules_inline/entity.js","../node_modules/markdown-it/lib/rules_inline/balance_pairs.js","../node_modules/markdown-it/lib/rules_inline/text_collapse.js","../node_modules/markdown-it/lib/rules_inline/state_inline.js","../node_modules/linkify-it/index.js","../node_modules/linkify-it/lib/re.js","../node_modules/node-libs-browser/node_modules/punycode/punycode.js","../node_modules/markdown-it/lib/presets/default.js","../node_modules/markdown-it/lib/presets/zero.js","../node_modules/markdown-it/lib/presets/commonmark.js"],"names":["_hasOwnProperty","Object","prototype","hasOwnProperty","has","object","key","call","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","String","fromCharCode","UNESCAPE_MD_RE","UNESCAPE_ALL_RE","RegExp","source","DIGITAL_ENTITY_TEST_RE","entities","require","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","ch","REGEXP_ESCAPE_RE","UNICODE_PUNCT_RE","exports","lib","mdurl","ucmicro","assign","obj","sources","Array","slice","arguments","forEach","TypeError","keys","isString","toString","_class","unescapeMd","str","indexOf","replace","unescapeAll","match","escaped","entity","name","code","charCodeAt","test","toLowerCase","parseInt","replaceEntityPattern","escapeHtml","arrayReplaceAt","src","pos","newElements","concat","isSpace","isWhiteSpace","isMdAsciiPunct","isPunctChar","escapeRE","normalizeReference","trim","toUpperCase","objectWithoutPropertiesLoose","module","excluded","i","target","getOwnPropertySymbols","sourceSymbolKeys","length","propertyIsEnumerable","sourceKeys","SPACINGS","GRID_SIZES","getOffset","val","div","undefined","parse","parseFloat","Grid","React","props","ref","_props$alignContent","alignContent","_props$alignItems","alignItems","classes","classNameProp","className","_props$component","component","Component","_props$container","container","_props$direction","direction","_props$item","item","_props$justify","justify","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","xs","_props$zeroMinWidth","zeroMinWidth","other","_objectWithoutProperties","clsx","root","_extends","StyledGrid","withStyles","theme","boxSizing","display","flexWrap","width","margin","minWidth","flexDirection","justifyContent","breakpoint","styles","themeSpacing","padding","generateGutter","breakpoints","reduce","accumulator","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","up","generateGrid","Card","_props$raised","raised","Paper","elevation","overflow","ownKeys","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","withTranslation","ns","options","WrappedComponent","I18nextWithTranslation","_ref","forwardedRef","rest","_useTranslation","useTranslation","_useTranslation2","_slicedToArray","t","i18n","ready","passDownProps","tReady","withRef","createElement","displayName","getDisplayName","forwardRef","Ruler","this","__rules__","__cache__","__find__","__compile__","self","chains","rule","enabled","alt","altName","chain","fn","at","index","opt","Error","before","beforeName","ruleName","splice","after","afterName","enable","list","ignoreInvalid","isArray","result","idx","enableOnly","disable","getRules","chainName","Token","type","tag","nesting","attrs","map","level","children","content","markup","info","meta","block","hidden","attrIndex","len","attrPush","attrData","attrSet","value","attrGet","attrJoin","encode","decode","format","open_tag","close_tag","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","postProcess","state","delimiters","j","startDelim","endDelim","token","loneMarkers","max","marker","end","tokens","pop","tokenize","silent","scanned","start","scanDelims","jump","open","can_open","close","can_close","curr","tokens_meta","isStrong","utils","helpers","Renderer","ParserCore","ParserBlock","ParserInline","LinkifyIt","punycode","config","default","zero","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","validateLink","url","RECODE_HOSTNAME_FOR","normalizeLink","parsed","hostname","protocol","toASCII","er","normalizeLinkText","toUnicode","defaultChars","MarkdownIt","presetName","inline","core","renderer","linkify","configure","set","presets","components","rules","ruler","rules2","ruler2","missed","use","plugin","args","env","State","process","render","parseInline","inlineMode","renderInline","encodeCache","string","exclude","keepEscaped","l","nextCode","cache","getEncodeCache","encodeURIComponent","componentChars","decodeCache","getDecodeCache","seq","b1","b2","b3","b4","chr","slashes","auth","port","pathname","search","hash","Url","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","hostlessProtocol","slashedProtocol","slashesDenoteHost","lowerProto","hec","split","simplePath","exec","proto","substr","atSign","hostEnd","lastIndexOf","host","parseHost","ipv6Hostname","hostparts","part","newpart","k","validParts","notHost","bit","unshift","join","qm","u","Any","Cc","Cf","P","Z","parseLinkLabel","parseLinkDestination","parseLinkTitle","disableNested","found","prevPos","labelEnd","posMax","oldPos","skipToken","ok","lines","default_rules","code_inline","slf","renderAttrs","code_block","fence","highlighted","arr","tmpAttrs","tmpToken","langName","langAttrs","highlight","langPrefix","image","renderInlineAsText","renderToken","hardbreak","xhtmlOut","softbreak","breaks","text","html_block","html_inline","nextToken","needLf","_rules","Core","NEWLINES_RE","NULL_RE","tok","isLinkClose","currentToken","nodes","ln","lastPos","htmlLinkLevel","fullUrl","urlText","links","blockTokens","pretest","schema","lastIndex","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","r","p","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","blkIdx","typographer","QUOTE_TEST_RE","QUOTE_RE","replaceAt","process_inlines","thisLevel","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","canOpen","canClose","isSingle","stack","openQuote","closeQuote","OUTER","single","quotes","StateCore","startLine","endLine","line","hasEmptyLines","maxNesting","skipEmptyLines","sCount","blkIndent","tight","isEmpty","outTokens","lineMax","getLine","bMarks","tShift","eMarks","escapedSplit","isEscaped","current","substring","lineText","nextLine","columns","columnCount","aligns","tableLines","tbodyLines","oldParentType","terminate","terminatorRules","shift","parentType","last","getLines","params","mem","haveEndMarker","skipChars","skipSpaces","adjustTab","initial","lastLineEmpty","offset","oldBMarks","oldBSCount","oldIndent","oldSCount","oldTShift","spaceAfterMarker","isOutdented","oldLineMax","bsCount","cnt","skipBulletListMarker","skipOrderedListMarker","contentStart","indent","indentAfterMarker","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldListIndent","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","listIndent","Number","min","markTightParagraphs","_endLine","destEndPos","destEndLineNo","href","label","res","title","references","tmp","skipSpacesBack","skipCharsBack","block_names","HTML_SEQUENCES","html","StateBlock","s","indent_found","ddIndent","from","begin","keepLastLF","lineIndent","first","queue","lineStart","_rules2","pending","pushPending","isTerminatorChar","pmax","ESCAPED","matchStart","matchEnd","openerLength","closerLength","backticksScanned","backticks","labelStart","parseReference","EMAIL_RE","AUTOLINK_RE","lc","isLetter","DIGITAL_RE","NAMED_RE","processDelimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","StateInline","pendingLevel","_prev_delimiters","token_meta","canSplitWord","count","left_flanking","right_flanking","isFunction","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","defaultSchemas","validate","tail","re","http","src_auth","src_host_port_strict","src_path","no_http","src_domain","src_domain_root","src_port","src_host_terminator","mailto","src_email_name","src_host_strict","tlds_default","compile","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","src_xn","email_fuzzy","tpl_email_fuzzy","link_fuzzy","tpl_link_fuzzy","link_no_ip_fuzzy","tpl_link_no_ip_fuzzy","host_fuzzy_test","tpl_host_fuzzy_test","aliases","schemaError","__compiled__","__schemas__","compiled","link","isRegExp","createValidator","normalize","alias","slist","schema_test","src_ZPCc","schema_search","__index__","__text_cache__","resetScanCache","Match","__last_index__","__schema__","raw","createMatch","schemas","acc","add","definition","m","ml","me","next","tld_pos","testSchemaAt","keepOld","sort","el","reverse","opts","src_Any","src_Cc","src_Z","src_P","src_ZCc","src_pseudo_letter","src_ip4","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","tpl_host_fuzzy_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","nodeType","freeGlobal","global","window","maxInt","base","regexPunycode","regexNonASCII","regexSeparators","errors","floor","stringFromCharCode","error","RangeError","array","mapDomain","parts","ucs2decode","extra","output","counter","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","baseMinusTMin","input","out","basic","oldi","w","baseMinusT","codePoint","inputLength","n","bias","handledCPCount","basicLength","q","currentValue","handledCPCountPlusOne","qMinusT","define"],"mappings":"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","file":"static/js/2.66b578ce.chunk.js","sourcesContent":["// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose\");\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutProperties;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { useTranslation } from './useTranslation';\nimport { getDisplayName } from './utils';\nexport function withTranslation(ns) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return function Extend(WrappedComponent) {\n    function I18nextWithTranslation(_ref) {\n      var forwardedRef = _ref.forwardedRef,\n          rest = _objectWithoutProperties(_ref, [\"forwardedRef\"]);\n\n      var _useTranslation = useTranslation(ns, rest),\n          _useTranslation2 = _slicedToArray(_useTranslation, 3),\n          t = _useTranslation2[0],\n          i18n = _useTranslation2[1],\n          ready = _useTranslation2[2];\n\n      var passDownProps = _objectSpread(_objectSpread({}, rest), {}, {\n        t: t,\n        i18n: i18n,\n        tReady: ready\n      });\n\n      if (options.withRef && forwardedRef) {\n        passDownProps.ref = forwardedRef;\n      } else if (!options.withRef && forwardedRef) {\n        passDownProps.forwardedRef = forwardedRef;\n      }\n\n      return React.createElement(WrappedComponent, passDownProps);\n    }\n\n    I18nextWithTranslation.displayName = \"withI18nextTranslation(\".concat(getDisplayName(WrappedComponent), \")\");\n    I18nextWithTranslation.WrappedComponent = WrappedComponent;\n\n    var forwardRef = function forwardRef(props, ref) {\n      return React.createElement(I18nextWithTranslation, Object.assign({}, props, {\n        forwardedRef: ref\n      }));\n    };\n\n    return options.withRef ? React.forwardRef(forwardRef) : I18nextWithTranslation;\n  };\n}","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * fence infostring\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      jump:   i / 2, // for `~~` 1 marker = 2 characters\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // An amount of characters before this one that's equivalent to\n      // current one. In plain English: if this delimiter does not open\n      // an emphasis, neither do previous `jump` characters.\n      //\n      // Used to skip sequences like \"*****\" in one step, for 1st asterisk\n      // value will be 0, for 2nd it's 1 and so on.\n      //\n      jump:   i,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               delimiters[startDelim.end + 1].token === endDelim.token + 1 &&\n               delimiters[i - 1].marker === startDelim.marker;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(lang, str, true).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(lang, str, true).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3C /* < */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break; }\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 32) { return result; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28 /* ( */ && marker === 0x29 /* ) */) {\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted, i, arr, tmpAttrs, tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        for (ln = 0; ln < links.length; ln++) {\n\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r|p)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  p: '§',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */);\n    pos++;\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines, oldParentType, terminate,\n      terminatorRules;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  ch = state.src.charCodeAt(pos++);\n  if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) { break; }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token     = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [ startLine + 2, 0 ];\n    }\n\n    token     = state.push('tr_open', 'tr', 1);\n    token.map = [ nextLine, nextLine + 1 ];\n\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, true);\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // set offset past spaces and \">\"\n  initial = offset = state.sCount[startLine] + 1;\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      initial = offset = state.sCount[nextLine] + 1;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.tShift[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.substr(start, posAfterMarker - start - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style)(?=(\\s|>|$))/i, /<\\/(script|pre|style)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  [ 'text_collapse',   require('./rules_inline/text_collapse') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        state.pending = state.pending.replace(/ +$/, '');\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) { state.pending += state.src[pos]; }\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push('hardbreak', 'br', 0);\n      }\n\n      pos++;\n      // skip leading whitespaces from next line\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += '\\\\'; }\n  state.pos++;\n  return true;\n};\n","// Parse backticks\n\n'use strict';\n\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchStart = matchEnd = pos;\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token     = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart;\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true;\n\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};\n","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.md.inline.tokenize(state);\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var url, fullUrl, token, ch, start, max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23 /* # */) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n      if (match) {\n        if (has(entities, match[1])) {\n          if (!silent) { state.pending += entities[match[1]]; }\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) { state.pending += '&'; }\n  state.pos++;\n  return true;\n};\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker and each delimiter length modulo 3.\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][closer.length % 3];\n\n    openerIdx = closerIdx - closer.jump - 1;\n\n    // avoid crash if `closer.jump` is pointing outside of the array, see #742\n    if (openerIdx < -1) openerIdx = -1;\n\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= opener.jump + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            delimiters[openerIdx - 1].jump + 1 :\n            0;\n\n          closer.jump  = closerIdx - openerIdx + lastJump;\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.jump  = lastJump;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.length || 0) % 3] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function text_collapse(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n\n  // backtick length => last seen position\n  this.backticks = {};\n  this.backticksScanned = false;\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')(?!-|_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-]).|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n                                     // github has ... in commit range links,\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // - params separator\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]).|' +\n          (opts && opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          '\\\\,(?!' + re.src_ZCc + ').|' +       // allow `,,,` in paths\n          '\\\\!+(?!' + re.src_ZCc + '|[!]).|' +  // allow `!!!` in paths, but not at the end\n          '\\\\?(?!' + re.src_ZCc + '|[?]).' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'text_collapse'\n      ]\n    }\n  }\n};\n"],"sourceRoot":""}