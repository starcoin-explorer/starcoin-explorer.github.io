{"version":3,"sources":["common/Link/index.tsx","common/View/CenteredView/index.tsx","rootStore/loading/selector.ts","common/TimeAgo/index.tsx","common/Time/index.tsx","modules/Transactions/components/TransactionSummary/index.tsx","modules/Transactions/components/Table/index.tsx","utils/formatTime.ts","common/View/PageViewHeader/index.tsx","common/View/PageView/index.tsx","common/View/PageViewTable/index.tsx","modules/Error404/address.tsx","common/View/ResourceViewTable/index.tsx","common/View/ResourceView/index.tsx","modules/Address/index.tsx","modules/Address/adapter.ts"],"names":["Index","linkText","this","props","path","title","variantIn","variant","white","absolute","newTab","onClick","className","classes","classNameLink","classNames","link","linkWhite","commonLink","React","cloneElement","children","startsWith","href","target","undefined","to","PureComponent","withStyles","theme","createStyles","overflow","textOverflow","whiteSpace","color","palette","primary","main","fontWeight","typography","fontWeightRegular","textDecoration","dark","root","container","spacing","justify","gridItem","item","xs","sm","md","col","breakpoints","down","padding","up","margin","width","display","flexDirection","justifyContent","maxWidth","createLoadingSelector","actions","state","some","action","get","timer","status","flip","bind","window","setInterval","clearInterval","newStatus","setState","time","i18n","value","formatTime","language","Typography","withTranslation","TimeAgo","TransactionSummary","transaction","isTransaction","source","payloadInHex","user_transaction","raw_txn","payload","txnPayload","encoding","decodeTransactionPayload","type","Object","keys","getNetwork","transaction_hash","rightHeader","timestamp","expiration_timestamp_secs","paddingLeft","paddingRight","alignItems","borderBottom","paddingBottom","paddingTop","flex","marginRight","minWidth","transactions","map","_id","timeMS","parseInt","Date","now","toLocaleString","locale","timeago","id","name","pluralName","searchRoute","icon","backgroundColorClassName","t","breadcrumbVariant","slash","text","static","iconElement","Icon","backgroundColor","leftHeader","component","Link","linkSelected","marginBottom","flexWrap","fontSize","headerIcon","headerBackgroundColorClassName","bodyColumns","extraCard","extra","CenteredView","Card","PageViewHeader","PageViewTable","columns","wrapRow","element","idx","height","firstCol","firstColRow","firstRow","row","length","rowBorder","lastRow","baseRow","style","column","label","secondCol","fontWeightMedium","borderTop","minHeight","address","networkString","networkCapitalized","charAt","toUpperCase","slice","lg","card","headline","wordWrap","overflowWrap","resources","resourcesTable","i","push","ResourceViewTable","addressData","balancesData","accountStatus","accountResources","hash","computedMatch","params","getAddressSTCBalance","then","data","getAddressData","getBalancesData","console","log","getAddressTransactions","getAddressResources","formatResources","addressTransactions","isInitialLoad","contents","Accordion","AccordionSummary","expandIcon","aria-controls","gutterBottom","AccordionDetails","table","Loading","ResourceView","options","forEach","key","formatBalance","split","token","NativeSelect","authentication_key","sequence_number","PageView","generateExtra","defaultProps","shrinkMaxCol","shrinkCol","currentSelector","storeTransactions","selector","loadingSelector","types","createSelector","current","loading","connect"],"mappings":"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","file":"static/js/10.08d9f2de.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { createStyles, withStyles, Theme } from '@material-ui/core/styles';\nimport { Variant } from '@material-ui/core/styles/createTypography';\nimport Typography from '@material-ui/core/Typography';\nimport { Link as RRLink } from 'react-router-dom';\n\nconst useStyles = (theme: Theme) => createStyles({\n  commonLink: {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n  },\n  link: {\n    color: theme.palette.primary.main,\n    fontWeight: theme.typography.fontWeightRegular,\n    textDecoration: 'none',\n    '&:hover': {\n      color: theme.palette.primary.dark,\n      textDecoration: 'underline',\n    },\n  },\n  linkWhite: {\n    color: '#fff',\n    fontWeight: theme.typography.fontWeightRegular,\n    textDecoration: 'underline',\n    '&:hover': {\n      color: 'rgba(255, 255, 255, 0.87)',\n      textDecoration: 'underline',\n    },\n  },\n});\n\ninterface ExternalProps {\n  path: string,\n  title: string | React.CElement<any, any>,\n  variant?: Variant,\n  white?: boolean,\n  absolute?: boolean,\n  newTab?: boolean,\n  onClick?: () => void,\n  className?: string,\n}\n\ninterface InternalProps {\n  classes: any,\n}\n\ninterface Props extends ExternalProps, InternalProps {}\n\nclass Index extends React.PureComponent<Props> {\n  render() {\n    const { path, title, variant: variantIn, white, absolute, newTab, onClick, className, classes } = this.props;\n    const variant = variantIn || 'body1';\n    const classNameLink = classNames(\n      {\n        [classes.link]: !white,\n        [classes.linkWhite]: !!white,\n      },\n      classes.commonLink,\n    );\n    let linkText;\n    if (typeof title === 'string') {\n      linkText = (\n        <Typography\n          variant={variant}\n          className={classNames(classNameLink, className)}\n        >\n          {title}\n        </Typography>\n      );\n    } else {\n      linkText = React.cloneElement(\n        title,\n        {\n          ...title.props,\n          className: classNames(classNameLink, className, title.props.className),\n        },\n        title.props.children,\n      );\n    }\n\n    if (absolute || path.startsWith('http') || newTab) {\n      return (\n        // eslint-disable-next-line react/jsx-no-target-blank\n        <a\n          className={classNameLink}\n          href={path}\n          target={newTab ? '_blank' : undefined}\n          onClick={onClick}\n        >\n          {linkText}\n        </a>\n      );\n    }\n\n    return (\n      <RRLink className={classNameLink} to={path} onClick={onClick}>\n        {linkText}\n      </RRLink>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(Index);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { createStyles, withStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = (theme: Theme) => createStyles({\n  [theme.breakpoints.down('sm')]: {\n    root: {\n      padding: theme.spacing(1),\n    },\n  },\n  [theme.breakpoints.up('sm')]: {\n    root: {\n      padding: theme.spacing(2),\n    },\n  },\n  root: {\n    margin: 0,\n    width: '100%',\n  },\n  col: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    maxWidth: 1200,\n    width: '100%',\n  },\n  gridItem: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n});\n\ninterface ExternalProps {\n  children?: any,\n  className?: string,\n}\n\ninterface InternalProps {\n  classes: any,\n}\n\ninterface Props extends ExternalProps, InternalProps {}\n\nclass Index extends React.PureComponent<Props> {\n  render() {\n    const { children, className, classes } = this.props;\n    return (\n      <Grid\n        className={classNames(className, classes.root)}\n        container\n        spacing={0}\n        justify=\"center\"\n      >\n        <Grid className={classes.gridItem} item xs={12} sm={12} md={10}>\n          <div className={classes.col}>{children}</div>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(Index);\n","import { createSelector } from 'reselect';\nimport get from 'lodash/get';\n\nconst createLoadingSelector = (actions: any) => (state: any) => {\n  return actions.some((action: any) => get(state, `loading.${action}`));\n};\n\nexport default createLoadingSelector;","import React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { createStyles, withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport formatTime from '@/utils/formatTime';\n\nconst useStyles = () => createStyles({\n  root: {\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n});\n\ninterface ExternalProps {\n  time: number,\n  className?: string,\n}\n\ninterface InternalProps {\n  classes: any,\n  i18n: any,\n}\n\ninterface Props extends ExternalProps, InternalProps {}\n\ninterface IndexState {\n  status: boolean,\n}\n\nclass Index extends React.PureComponent<Props, IndexState> {\n  private timer: number = 0;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      status: true,\n    };\n\n    this.flip = this.flip.bind(this);\n  }\n\n  componentDidMount() {\n    this.timer = window.setInterval(this.flip, 1000);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timer);\n  }\n\n  flip() {\n    // eslint-disable-next-line react/no-access-state-in-setstate\n    const newStatus = !this.state.status;\n    this.setState({ status: newStatus });\n  }\n\n  render() {\n    const { time, i18n, className, classes } = this.props;\n    const value = formatTime(time, i18n.language);\n    return (\n      <Typography className={className} classes={classes}>{value}</Typography>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(withTranslation()(Index));\n","import React from 'react';\nimport { createStyles, withStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport TimeAgo from '@/common/TimeAgo';\n\nconst useStyles = () => createStyles({\n  root: {\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n});\n\ninterface ExternalProps {\n  time: number,\n  className?: string,\n}\n\ninterface InternalProps {\n  classes: any,\n}\n\ninterface Props extends ExternalProps, InternalProps {}\n\nclass Index extends React.PureComponent<Props> {\n  render() {\n    const { time, className, classes } = this.props;\n    return (\n      <TimeAgo\n        className={classNames(className, classes.root)}\n        time={time}\n      />\n    );\n  }\n}\n\nexport default withStyles(useStyles)(Index);\n","import React, { PureComponent } from 'react';\nimport classNames from 'classnames';\nimport CommonTime from '@/common/Time';\nimport CommonLink from '@/common/Link';\nimport { getNetwork } from '@/utils/helper';\nimport { withStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { encoding } from '@starcoin/starcoin';\n\nconst useStyles = (theme: Theme) =>\n  createStyles({\n    [theme.breakpoints.down('sm')]: {\n      root: {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n      },\n    },\n    [theme.breakpoints.up('sm')]: {\n      root: {\n        paddingLeft: theme.spacing(1) * 2,\n        paddingRight: theme.spacing(1) * 2,\n      },\n    },\n    root: {\n      alignItems: 'center',\n      borderBottom: '1px solid rgba(0, 0, 0, 0.075)',\n      display: 'flex',\n      justifyContent: 'space-between',\n      paddingBottom: theme.spacing(1),\n      paddingTop: theme.spacing(1),\n    },\n    leftHeader: {\n      flex: '1 100 auto',\n      marginRight: theme.spacing(1),\n      minWidth: 150,\n    },\n    rightHeader: {\n      alignItems: 'center',\n      display: 'flex',\n      flex: '1 1 208px',\n      justifyContent: 'flex-end',\n      minWidth: '0',\n    },\n    time: {\n      marginRight: theme.spacing(1),\n    },\n  });\n\ninterface ExternalProps {\n  transaction: any;\n  className?: string;\n}\n\ninterface InternalProps {\n  classes: any;\n}\n\ninterface Props extends ExternalProps, InternalProps {}\n\nclass TransactionSummary extends PureComponent<Props> {\n  render() {\n    const { transaction, className, classes } = this.props;\n    const isTransaction = !!transaction;\n    const source = isTransaction ? transaction : transaction;\n    let payloadInHex = '';\n    if (source.user_transaction) {\n      payloadInHex = source.user_transaction.raw_txn.payload;\n    }\n    if (source.raw_txn) {\n      payloadInHex = source.raw_txn.payload;\n    }\n    const txnPayload = payloadInHex\n      ? encoding.decodeTransactionPayload(payloadInHex)\n      : [];\n    const type = Object.keys(txnPayload)[0];\n    return (\n      <div className={classNames(classes.root, className)}>\n        {type}&nbsp;\n        <CommonLink\n          path={`/${getNetwork()}/transactions/detail/${\n            source.transaction_hash\n          }`}\n          title={source.transaction_hash}\n        />\n        <div className={classes.rightHeader}>\n          <CommonTime\n            className={classes.time}\n            time={\n              isTransaction\n                ? source.timestamp\n                : source.raw_txn.expiration_timestamp_secs * 1000\n            }\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(TransactionSummary);\n","import React from 'react';\nimport TransactionSummary from '../TransactionSummary';\n\ninterface ExternalProps {\n  transactions: any,\n  className?: string,\n}\n\ninterface InternalProps {}\n\ninterface Props extends ExternalProps, InternalProps {}\n\nclass Index extends React.PureComponent<Props> {\n  render() {\n    const { transactions, className } = this.props;\n    return (\n      <div className={className}>\n        {transactions.map((transaction: any) => (\n          <TransactionSummary\n            key={transaction._id || transaction.transaction_hash}\n            transaction={transaction}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Index;\n","import * as timeago from 'timeago.js';\n\nconst TWO_DAYS_MS = 2 * 24 * 60 * 60 * 1000;\n\nconst formatTime = (time: number, language: string) => {\n  let value;\n  const timeMS = typeof time === 'string' ? parseInt(time) : time;\n  if (Date.now() - timeMS > TWO_DAYS_MS) {\n    value = new Date(timeMS).toLocaleString();\n  } else {\n    // timeago.js supports zh_CN or zh_TW, instead of zh\n    const locale = language === 'zh' ? 'zh_CN' : language;\n    value = timeago.format(timeMS, locale);\n  }\n  return value;\n};\n\nexport default formatTime;","import React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport { createStyles, withStyles, Theme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Icon from '@material-ui/core/Icon';\nimport Link from '@/common/Link';\n\nconst useStyles = (theme: Theme) => createStyles({\n  [theme.breakpoints.down('sm')]: {\n    root: {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1),\n      paddingTop: theme.spacing(1),\n    },\n    leftHeader: {\n      marginBottom: theme.spacing(1),\n      marginRight: theme.spacing(1),\n    },\n    rightHeader: {\n      marginBottom: theme.spacing(1),\n    },\n  },\n  [theme.breakpoints.up('sm')]: {\n    root: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      paddingTop: theme.spacing(2),\n    },\n    leftHeader: {\n      marginBottom: theme.spacing(1),\n      marginRight: theme.spacing(1),\n    },\n    rightHeader: {\n      marginBottom: theme.spacing(1),\n    },\n  },\n  [theme.breakpoints.down('md')]: {\n    root: {\n      flexWrap: 'wrap',\n    },\n  },\n  [theme.breakpoints.up('md')]: {\n    root: {\n      flexWrap: 'nowrap',\n    },\n  },\n  root: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  leftHeader: {\n    alignItems: 'center',\n    display: 'flex',\n    flex: '0 1 auto',\n    minWidth: '0',\n  },\n  rightHeader: {\n    alignItems: 'center',\n    display: 'flex',\n  },\n  static: {\n    overflow: 'initial',\n  },\n  margin: {\n    marginRight: theme.spacing(1),\n  },\n  text: {\n    color: '#fff',\n  },\n  title: {\n    fontSize: '1.3125rem',\n    fontWeight: 700,\n  },\n  link: {\n    color: '#fff',\n    textDecoration: 'underline',\n    '&:hover': {\n      color: 'rgba(255, 255, 255, 0.87)',\n    },\n  },\n  linkSelected: {\n    color: 'rgba(255, 255, 255, 0.87)',\n    textDecoration: 'underline',\n  },\n  backgroundColor: {\n    backgroundColor: '#3d454d',\n  },\n  id: {\n    flex: '0 1 auto',\n    minWidth: '0',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n});\n\ninterface ExternalProps {\n  id: string,\n  title: string,\n  name: string,\n  pluralName?: string,\n  searchRoute?: string,\n  icon?: string,\n  backgroundColorClassName?: string,\n  className?: string,\n}\n\ninterface InternalProps {\n  classes: any,\n  t: any,\n}\n\ninterface Props extends ExternalProps, InternalProps {}\n\nclass Index extends React.PureComponent<Props> {\n  render() {\n    const { id, title, name, pluralName, searchRoute, icon, backgroundColorClassName, className, classes, t } = this.props;\n    const breadcrumbVariant = 'body1';\n    const slash = (\n      <Typography\n        className={classNames(classes.text, classes.margin, classes.static)}\n        variant={breadcrumbVariant}\n      >\n        /\n      </Typography>\n    );\n    const iconElement = (icon != null) ? <Icon className={classNames(classes.margin, classes.text)}>{icon}</Icon> : null;\n    return (\n      <div\n        className={classNames(\n          classes.root,\n          className,\n          backgroundColorClassName == null\n            ? classes.backgroundColor\n            : backgroundColorClassName,\n        )}\n      >\n        <div className={classes.leftHeader}>\n          {iconElement}\n          <Typography\n            className={classNames(classes.margin, classes.text, classes.title)}\n            component=\"h1\"\n          >\n            {title}\n          </Typography>\n          <Typography\n            className={classNames(classes.text, classes.id)}\n            variant=\"body2\"\n          >\n            {id}\n          </Typography>\n        </div>\n        <div className={classes.rightHeader}>\n          <Link\n            className={classNames(classes.link, classes.margin, classes.static)}\n            variant={breadcrumbVariant}\n            path=\"/\"\n            title={t('header.home')}\n          />\n          {slash}\n          {\n            (pluralName && searchRoute) ? (\n              <>\n                <Link\n                  className={classNames(classes.link, classes.margin, classes.static)}\n                  variant={breadcrumbVariant}\n                  path={searchRoute}\n                  title={pluralName}\n                />\n                {slash}\n              </>\n            ) : null\n          }\n          <Typography\n            className={classNames(classes.linkSelected, classes.static)}\n            variant={breadcrumbVariant}\n          >\n            {name}\n          </Typography>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(withTranslation()(Index));\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CenteredView from '@/common/View/CenteredView';\nimport PageViewHeader from '@/common/View/PageViewHeader';\nimport PageViewTable from '@/common/View/PageViewTable';\n\ninterface ExternalProps {\n  id: string,\n  title: string,\n  name: string,\n  pluralName?: string,\n  searchRoute?: string,\n  headerIcon?: string,\n  headerBackgroundColorClassName?: string,\n  bodyColumns: any,\n  extraCard?: any,\n  extra?: any,\n  children?: any,\n  className?: string,\n}\n\ninterface InternalProps {}\n\ninterface Props extends ExternalProps, InternalProps {}\n\nclass Index extends React.PureComponent<Props> {\n  render() {\n    const { id, title, name, pluralName, searchRoute, headerIcon, headerBackgroundColorClassName, bodyColumns, extraCard, extra, className } = this.props;\n    return (\n      <CenteredView className={className}>\n        <Card>\n          <PageViewHeader\n            id={id}\n            title={title}\n            name={name}\n            pluralName={pluralName}\n            searchRoute={searchRoute}\n            icon={headerIcon}\n            backgroundColorClassName={headerBackgroundColorClassName}\n          />\n          <PageViewTable columns={bodyColumns} />\n          {extraCard}\n        </Card>\n        {extra}\n      </CenteredView>\n    );\n  }\n}\n\nexport default Index;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { createStyles, withStyles, Theme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = (theme: Theme) => createStyles({\n  [theme.breakpoints.down('sm')]: {\n    firstColRow: {\n      paddingRight: theme.spacing(1),\n    },\n    root: {\n      padding: theme.spacing(1),\n    },\n  },\n  [theme.breakpoints.up('sm')]: {\n    firstColRow: {\n      paddingRight: theme.spacing(1) * 2,\n    },\n    root: {\n      padding: theme.spacing(1) * 2,\n    },\n  },\n  root: {\n    display: 'flex',\n  },\n  col: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  firstCol: {\n    flex: '0 0 auto',\n  },\n  secondCol: {\n    flex: '1 1 auto',\n    minWidth: '0',\n  },\n  label: {\n    fontWeight: theme.typography.fontWeightMedium,\n  },\n  firstColRow: {},\n  firstRow: {\n    paddingBottom: theme.spacing(1) / 2,\n  },\n  row: {\n    paddingBottom: theme.spacing(1) / 2,\n    paddingTop: theme.spacing(1) / 2,\n  },\n  rowBorder: {\n    borderTop: '1px solid rgba(0, 0, 0, 0.075)',\n  },\n  lastRow: {\n    paddingTop: theme.spacing(1) / 2,\n  },\n  text: {\n    minWidth: '0',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n  baseRow: {\n    minHeight: theme.spacing(1) * 3,\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n});\n\ninterface ExternalProps {\n  columns: any,\n  className?: string,\n}\n\ninterface InternalProps {\n  classes: any,\n}\n\ninterface Props extends ExternalProps, InternalProps {}\n\nclass Index extends React.PureComponent<Props> {\n  render() {\n    const { columns, className, classes } = this.props;\n    const wrapRow = (element: any, idx: any, height: any, firstCol?: any) => (\n      <div\n        key={idx}\n        className={classNames({\n          [classes.firstColRow]: !!firstCol,\n          [classes.firstRow]: idx === 0,\n          [classes.row]: idx !== 0 && idx !== columns.length - 1,\n          [classes.rowBorder]: idx !== 0,\n          [classes.lastRow]: idx === columns.length - 1,\n          [classes.baseRow]: true,\n        })}\n        style={height == null ? undefined : { height }}\n      >\n        {typeof element === 'string' ? (\n          <Typography key=\"hash\" className={classes.text} variant=\"body1\">\n            {element}\n          </Typography>\n        ) : (\n          element\n        )}\n      </div>\n    );\n    return (\n      <div className={classNames(className, classes.root)}>\n        <div className={classNames(classes.col, classes.firstCol)}>\n          {columns.map((column: any, idx: any) => wrapRow(\n            <Typography\n              key={column[0]}\n              className={classes.label}\n              variant=\"body1\"\n            >\n              {column[0]}\n            </Typography>,\n            idx,\n            column.length === 3 ? column[2] : null,\n            true\n          ))}\n        </div>\n        <div className={classNames(classes.col, classes.secondCol)}>\n          {columns.map((column: any, idx: any) => wrapRow(\n            column[1],\n            idx,\n            column.length === 3 ? column[2] : null\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(Index);\n","import React, { PureComponent } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Helmet from 'react-helmet';\nimport { getNetwork } from '@/utils/helper';\nimport { createStyles, withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = () => createStyles({\n  root: {\n    padding: 16,\n  },\n  card: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    padding: 24,\n  },\n  headline: {\n    paddingBottom: 8,\n  },\n});\n\ninterface IndexProps {\n  classes: any;\n  t: any;\n  address: any;\n}\n\nclass Index extends PureComponent<IndexProps> {\n  render() {\n    const { classes, t, address } = this.props;\n    const networkString = getNetwork() || 'main';\n    const networkCapitalized = networkString.charAt(0).toUpperCase() + networkString.slice(1);\n    return (\n      <div>\n        <Helmet>\n          <title>Address Not Onchain</title>\n        </Helmet>\n        <Grid className={classes.root} container justify=\"center\">\n          <Grid item xs={12} md={8} lg={4}>\n            <Card className={classes.card}>\n              <Typography variant=\"h6\" className={classes.headline}>\n                {t('account.address')} <strong>{address}</strong> {t('account.notOnchain')} {networkCapitalized} {t('account.network')}\n              </Typography>\n            </Card>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(withTranslation()(Index));\n","import React from 'react';\nimport classNames from 'classnames';\nimport { createStyles, withStyles, Theme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = (theme: Theme) => createStyles({\n  [theme.breakpoints.down('sm')]: {\n    firstColRow: {\n      paddingRight: theme.spacing(1),\n    },\n    firstRow: {\n      overflow: 'scroll!important',\n      minHeight: theme.spacing(1) * 3,\n      overflowWrap: 'unset',\n      whiteSpace: 'nowrap!important',\n    },\n    root: {\n      padding: theme.spacing(1),\n      marginBottom: theme.spacing(1)\n    },\n  },\n  [theme.breakpoints.up('sm')]: {\n    firstColRow: {\n      paddingRight: theme.spacing(1) * 2,\n    },\n    firstRow: {\n      overflowWrap: 'break-word',\n      minHeight: theme.spacing(1) * 3,\n    },\n    root: {\n      padding: theme.spacing(1) * 2,\n      marginBottom: theme.spacing(1) * 2\n    },\n  },\n  root: {\n    display: 'flex',\n    overflow: 'hidden',\n    alignItems: 'stretch',\n    justifyContent: 'space-around'\n  },\n  col: {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '150%',\n    paddingBottom: '100%',\n    marginBottom: '-100%'\n  },\n  firstCol: {\n    flex: '0 0 auto',\n  },\n  secondCol: {\n    flex: '1 1 auto',\n    whiteSpace: 'pre-line',\n    minWidth: '0',\n    overflow: 'auto',\n  },\n  label: {\n    fontWeight: theme.typography.fontWeightMedium,\n  },\n  firstColRow: {},\n  firstRow: {\n    paddingBottom: theme.spacing(1) / 2,\n  },\n  row: {\n    paddingBottom: theme.spacing(1) / 2,\n    paddingTop: theme.spacing(1) / 2,\n  },\n  rowBorder: {\n    borderTop: '1px solid rgba(0, 0, 0, 0.075)',\n  },\n  lastRow: {\n    paddingTop: theme.spacing(1) / 2,\n  },\n  text: {\n    overflow: 'auto',\n    whiteSpace: 'nowrap',\n    minWidth: '0',\n    textOverflow: 'ellipsis',\n  },\n  baseRow: {\n    /*\n    minHeight: theme.spacing(1) * 3,\n    overflow: 'hidden',\n    */\n    whiteSpace: 'pre-line',\n    textOverflow: 'ellipsis',\n  },\n});\n\ninterface ExternalProps {\n  columns: any,\n  className?: string,\n}\n\ninterface InternalProps {\n  classes: any,\n}\n\ninterface Props extends ExternalProps, InternalProps {}\n\nclass Index extends React.PureComponent<Props> {\n  render() {\n    const { columns, className, classes } = this.props;\n    const wrapRow = (element: any, idx: any, height: any, firstCol?: any) => (\n      <div\n        key={idx}\n        className={classNames({\n          [classes.firstColRow]: !!firstCol,\n          [classes.firstRow]: idx === 0,\n          [classes.row]: idx !== 0 && idx !== columns.length - 1,\n          [classes.rowBorder]: idx !== 0,\n          [classes.lastRow]: idx === columns.length - 1,\n          [classes.baseRow]: true,\n        })}\n        style={height == null ? undefined : { height }}\n      >\n        {typeof element === 'string' ? (\n          <Typography key=\"hash\" className={classes.text} variant=\"body1\">\n            {element}\n          </Typography>\n        ) : (\n          element\n        )}\n      </div>\n    );\n    return (\n      <div className={classNames(className, classes.root)}>\n        <div className={classNames(classes.col, classes.firstCol)}>\n          {columns.map((column: any, idx: any) => wrapRow(\n            <Typography\n              key={column[0]}\n              className={classes.label}\n              variant=\"body1\"\n            >\n              <b>{column[0]}</b>\n            </Typography>,\n            idx,\n            column.length === 4 ? column[3] : null,\n            true\n          ))}\n        </div>\n        <div className={classNames(classes.col, classes.secondCol)}>\n          {columns.map((column: any, idx: any) => wrapRow(\n            <Typography\n              key={column[1]}\n              className={classes.label}\n              variant=\"body1\"\n            >\n              { (idx === 0 || idx === 1) ? (\n                <code style={{ wordWrap: 'break-word' }}>\n                  {column[1]}\n                </code>\n              ) : column[1]}\n            </Typography>,\n            idx,\n            column.length === 4 ? column[3] : null\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(Index);\n","import React from 'react';\n// import EventViewTable from '@/common/View/EventViewTable';\nimport { createStyles, withStyles, Theme } from '@material-ui/core/styles';\nimport ResourceViewTable from '@/common/View/ResourceViewTable';\n\nconst useStyles = (theme: Theme) => createStyles({\n  [theme.breakpoints.down('sm')]: {\n    firstRow: {\n    },\n  },\n  [theme.breakpoints.up('sm')]: {\n    firstRow: {\n    },\n  },\n  firstRow: {\n  },\n});\n\ninterface ExternalProps {\n  resources: any,\n  className?: string,\n}\n\nclass Index extends React.PureComponent<ExternalProps> {\n  render() {\n    const { resources } = this.props;\n    const resourcesTable: any[] = [];\n    if (resources) {\n      for (let i = 0; i < resources.length; i++) {\n        const columns: any[] = [];\n        columns.push(['Key', resources[i][0]]);\n        columns.push(['Value', resources[i][1]]);\n        resourcesTable.push(<ResourceViewTable key={i} columns={columns} />);\n      }\n    }\n    return resourcesTable;\n  }\n}\n\nexport default withStyles(useStyles)(Index);\n","import React, { PureComponent } from 'react';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Loading from '@/common/Loading';\nimport ResourceView from '@/common/View/ResourceView';\nimport TransactionTable from '@/Transactions/components/Table';\nimport PageView from '@/common/View/PageView';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport { getAddressData, getBalancesData, getAddressSTCBalance, getAddressResources } from '@/utils/sdk';\nimport { formatBalance, formatResources } from '@/utils/helper';\nimport AddressNotFound from '../Error404/address';\n\nconst useStyles = () => createStyles({\n  table: {\n    width: '100%',\n  },\n  shrinkMaxCol: {\n    flex: '1 100 auto',\n    minWidth: 60,\n  },\n  shrinkCol: {\n    flex: '1 10 auto',\n  },\n});\n\ninterface IndexProps {\n  classes: any;\n  computedMatch: any;\n  addressTransactions: any;\n  getAddressTransactions: (data: any, callback?: any) => any;\n}\n\ninterface IndexState {\n  addressData: any,\n  balancesData: any,\n  accountStatus: any,\n  accountResources: any,\n}\n\nclass Index extends PureComponent<IndexProps, IndexState> {\n  // eslint-disable-next-line react/static-property-placement\n  static defaultProps = {\n    computedMatch: {},\n    addressTransactions: null,\n    getAddressTransactions: () => {}\n  };\n\n  constructor(props: IndexProps) {\n    super(props);\n    this.state = {\n      addressData: undefined,\n      balancesData: undefined,\n      accountStatus: undefined,\n      accountResources: undefined\n    };\n  }\n\n  componentDidMount() {\n    const hash = this.props.computedMatch.params.hash;\n    getAddressSTCBalance(hash).then(data => {\n      if (data) {\n        this.setState({ accountStatus: data });\n      } else {\n        this.setState({ accountStatus: 'nonexist' });\n      }\n    });\n    if (!this.state.addressData) {\n      getAddressData(hash).then(data => {\n        if (data) {\n          this.setState({ addressData: data });\n        }\n      });\n    }\n    if (!this.state.balancesData) {\n      getBalancesData(hash).then(data => {\n        if (data) {\n          this.setState({ balancesData: data });\n        } else {\n          console.log('get balances failed')\n        }\n      });\n    }\n    this.props.getAddressTransactions({ hash });\n\n    getAddressResources(hash).then(data => {\n      if (data) {\n        this.setState({ accountResources: formatResources(data) });\n      } else {\n        this.setState({ accountResources: 'noResource' });\n      }\n    });\n  }\n\n  generateExtra() {\n    const { addressTransactions, classes } = this.props;\n    const { accountResources } = this.state;\n    const isInitialLoad = !addressTransactions && !accountResources;\n    const transactions = addressTransactions && addressTransactions.contents || [];\n    return (\n      <div>\n        <br />\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography variant=\"h5\" gutterBottom>Transactions</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <div className={classes.table}>\n              {isInitialLoad ? <Loading /> : <TransactionTable\n                transactions={transactions}\n              />}\n            </div>\n          </AccordionDetails>\n        </Accordion>\n        <br />\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography variant=\"h5\" gutterBottom>Resources</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <div className={classes.table}>\n              { isInitialLoad ? <Loading /> : <ResourceView resources={accountResources} /> }\n            </div>\n          </AccordionDetails>\n        </Accordion>\n      </div>\n    );\n  }\n\n  render() {\n    const { addressData, balancesData, accountStatus } = this.state;\n    const hash = this.props.computedMatch.params.hash;\n\n    if (accountStatus === undefined) {\n      return <Loading />;\n    } else if (accountStatus === 'nonexist') {\n      return <AddressNotFound address={hash} />;\n    }\n    if (!addressData || !balancesData) {\n      return null;\n    }\n    const options: any[] = [];\n    let value;\n    Object.keys(balancesData).forEach((key, idx) => {\n      value = (idx === 0) ? key : '';\n      options.push(<option key={key} value={key}>{`${formatBalance(balancesData[key])} ${key.split('::')[2]}`}</option>);\n    });\n\n    const token = (\n      <NativeSelect\n        id=\"demo-customized-select-native\"\n        value={value}\n      >\n        {options}\n      </NativeSelect>\n    );\n    const columns = [\n      ['Hash', this.props.computedMatch.params.hash],\n      ['Authentication Key', addressData.authentication_key],\n      ['Sequence Number', addressData.sequence_number],\n      ['Token', token],\n    ];\n\n    return (\n      <PageView\n        id={this.props.computedMatch.params.hash}\n        title=\"Address\"\n        name=\"Address\"\n        bodyColumns={columns}\n        extra={this.generateExtra()}\n      />\n    );\n  }\n}\n\nexport default withStyles(useStyles)(Index);\n","import { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport createLoadingSelector  from '@/rootStore/loading/selector';\nimport * as types from '@/Transactions/store/constants';\nimport storeTransactions from '@/Transactions/store';\nimport Index from './index';\n\nconst { selector: currentSelector, actions } = storeTransactions;\n\nconst loadingSelector = createLoadingSelector([types.GET_ADDRESS_TRANSACTIONS]);\n\nconst selector = createSelector(\n  currentSelector,\n  loadingSelector,\n  (current, loading) => ({\n    addressTransactions: current.addressTransactions,\n    loading\n  })\n);\n\nexport default connect(selector, {\n  getAddressTransactions: actions.getAddressTransactions\n})(Index) as any;"],"sourceRoot":""}